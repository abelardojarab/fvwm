# vim: sts=0:noet:syntax=fvwm:foldmethod=marker

SetEnv fvwm_cache $[HOME]/.fvwm.cache
SetEnv fvwm_userdir $[HOME]/.fvwm
SetEnv fvwm_wallpaper $[fvwm_userdir]/images/wallpapers/osxelcapitan.png
Setenv fvwm_colors $[HOME]/.fvwm/images/icons/colors
ModulePath $[fvwm_userdir]:$[fvwm_userdir]/modules:+

#######
# The default ImagePath for icons is:
# /usr/include/X11/bitmap:/usr/include/X11/pixmaps
#################

ImagePath $[fvwm_userdir]/images
ImagePath +:$[fvwm_userdir]/images/icons
ImagePath +:$[fvwm_userdir]/images/bar
ImagePath +:$[fvwm_userdir]/images/tiles
ImagePath +:$[fvwm_userdir]/images/buttons
ImagePath +:$[fvwm_userdir]/images/actions
ImagePath +:$[fvwm_userdir]/images/mini
ImagePath +:$[fvwm_userdir]/images/icons/decorations
ImagePath +:$[fvwm_userdir]/images/icons/apps
ImagePath +:$[fvwm_userdir]/images/icons/actions
ImagePath +:$[fvwm_userdir]/images/icons/xpms

IconPath  $[fvwm_userdir]/images
IconPath +:$[fvwm_userdir]/images/icons
IconPath +:$[fvwm_userdir]/images/bar
IconPath +:$[fvwm_userdir]/images/tiles
IconPath +:$[fvwm_userdir]/images/buttons
IconPath +:$[fvwm_userdir]/images/actions
IconPath +:$[fvwm_userdir]/images/icons/decorations
IconPath +:$[fvwm_userdir]/images/icons/apps
IconPath +:$[fvwm_userdir]/images/icons/actions
IconPath +:$[fvwm_userdir]/images/icons/xpms

######
# Adjust ratio to calculate resolution dependant things
#################

PipeRead "echo InfoStoreAdd aspect_ratio `perl -e 'printf \"%.2f\",$[vp.width]/$[vp.height]'`"

# find the smallest resolution depending on the aspect ratio
PipeRead `perl -e 'if ($[infostore.aspect_ratio] > 2.0) { \
                         print "InfoStoreAdd ref_width 800\\n"; \
                         print "InfoStoreAdd ref_height 384\\n"; \
                   } elsif ($[infostore.aspect_ratio] > 1.6) { \
                         print "InfoStoreAdd ref_width 960\\n"; \
                         print "InfoStoreAdd ref_height 540\\n"; \
                   } elsif ($[infostore.aspect_ratio] > 1.4) { \
                         print "InfoStoreAdd ref_width 960\\n"; \
                         print "InfoStoreAdd ref_height 640\\n"; \
                   } else { \
                         print "InfoStoreAdd ref_width 800\\n"; \
                         print "InfoStoreAdd ref_height 600\\n"; \
                   }'`

#InfoStoreAdd ratio 1.1
PipeRead "echo InfoStoreAdd ratio `perl -e 'printf \"%.2f\",log($[vp.width]*$[vp.height])/log(10)-log($[infostore.ref_width]*$[infostore.ref_height])/log(10)+1'`"

#InfoStoreAdd hratio 0.8
PipeRead "echo InfoStoreAdd hratio `perl -e 'printf \"%.2f\",($[vp.height]/540)'`"

#InfoStoreAdd wratio 2
PipeRead "echo InfoStoreAdd wratio `perl -e 'printf \"%.2f\",($[vp.width]/800)'`"

#######
# Fonts
#################
InfoStoreAdd font_sans "xft:Fira Mono:size=11:encoding=iso10646-1"
InfoStoreAdd font_mono "xft:Fira Mono:size=12:encoding=iso10646-1"
DefaultFont "$[infostore.font_mono]"
WindowFont "$[infostore.font_mono]"

######
# Resize and move feedback windows in the center of the screen
#################
Emulate mwm

######
# Use an arrow rather than the `X` cursor on the root window.
#################
CursorStyle root top_left_arrow
CursorStyle stroke hand2

#####
# Viewport and Virtual Desktop Setup
# You can automatically move the viewport into adjacent pages when the pointer
# hits the screen edge, but I dont like this.
# EdgeThickness disables edge scrolling and EdgeCommand, which I never use.
#################
DeskTopSize 3x3
EdgeScroll 0 0
EdgeThickness 1
EdgeResistance 400

######
# Use colormaps according to Focus, rather than where the Mouse is.
#################
ColormapFocus FollowsFocus

#####
# OpaqueMoveSize allows you to stop Large windows from being moved opaquely,
# I like the effect, and have Cycles to burn, so all windows can use it.
#################
OpaqueMoveSize -1

#####
# http://www.fvwm.org/documentation/faq/#5.5
#################
IgnoreModifiers L2

#####
# 'rubber-band' window-borders when moving and resizing windows.
XORvalue 208
#################

#####
# You can use EwmhBaseStruts to stop Maximised windows, and new windows from obscuring
# TaskBars/ButtonBars or anything else you always want to be visible.
#
# This Setting makes sure my ButtonBar on the left and taskbar along the bottom is always
# visible, if you would like some windows to ignore this setting when being placed or Maximized,
# you can set the EWMHPlacementIgnoreWorkingArea or EWMHMaximizeIgnoreWorkingArea Style options.
#
# you can also use the ewmhiwa flag on ceratin Maximize commands, so you could have one menu
# option for normal maximization, and one for full-screen maximization.
# Syntax: EwmhBaseStruts left right top bottom
#################
EwmhBaseStruts 92 0 30 0

######
# Fvwm uses a default ClickTime of 150ms, which is way too short for me.
# A Click that lasts <= ClickTime is considered a `Click` in functions,
# > ClickTime is a `Hold`.
# Remember that if you have a function that has actions on Click (C) and
# DoubleClick (D), fvwm will have to wait at least this long so it can tell which
# action you are trying to make.
#################
ClickTime 550

######
# FlickeringMoveWorkaround disables ConfigureNotify events that
# are usually sent to an application while it is moved. If some
# windows flicker annoyingly while being moved, this option may
# help you. Note that if this problem occurs it is not an fvwm
# bug, it is a problem of the application.
#################
BugOpts FlickeringMoveWorkaround True

# In Style statements, *’s are wild cards, so ‘Style *’ says apply this style to every window.
# This is followed by a list of styles separated by commas that you wish to use.

#####
# SnapAttraction lets nearby windows snap together, or snap to edges so that they
# are easier to align on your desktop, The default is off, if you set it too large
# it's annoying as hell, 3 pixels is just right.
#################
Style * SnapAttraction 3 SameType

#######
# MWM emulation:
# 1) mwm-style border reliefs (less deep than default fvwm) ?
# 2) maximize button does mwm-inversion thing
# 3) makes fvwm attempt to recognize and respect the mwm decoration hints
# that applications occasionally use
#################
Style * MWMDecor, MWMBorder, MWMFunctions, MWMButtons

#######
# makes fvwm shade out operations that mwm would prohibit, but it lets
# you perform the operation anyway
#################
Style * HintOverride

#######
# Use EWMH hints and respect EWMH hints which change the window layer.
#################
Style * EWMHUseStackingOrderHints

#######
# The WindowShadeSteps option selects the number of steps for animation
# when shading a window with WindowShade.
#################
Style * WindowShadeSteps 20, WindowShadeScrolls

#######
# NoPPosition instructs fvwm to ignore the PPosition field in window geometry hints.
# Emacs annoyingly sets PPosition to (0,0)!
#################
Style * NoPPosition, NoTransientPPosition

#######
# Eye Candy preference of watching resize live
#################
Style * ResizeOutline, ResizeOpaque

#######
# Horizontal bars that appear on the title bars of sticky windows, for all windows
#################
Style * StippledTitle

#######
# TileCascadePlacement automatically places new windows in a smart
# location - a location in which they do not overlap any other windows
# on the screen.
#################
Style * TileCascadePlacement

#######
# Similar focus behavior to xfce/openbox.
#################
Style * SloppyFocus
Style * ClickToFocus
Style * RaiseTransient
Style * LowerTransient
Style * StackTransientParent

#######
# FP-related functions
#################
Style * FPSortWindowlistByFocus

#######
# The focus policy. Once you are used to clicking *inside* windows to
# raise them you will not want to lose this feature.
# FPClickToFocus, FPClickDecorToFocus or FPClickIconToFocus,
# Click inside the window, modification occurs; when the icon, the window receives focus.
#################
Style * FPClickToFocus

#######
# Click Raise window (Clicking at the window to raise it)
#################
Style * FPClickRaisesFocused

######
# FPEnterToFocus, when the pointer enters the window, the window receives focus
#################
Style * FPEnterToFocus

# Window behavior
Style * UseDecor MyDecoration
Style * Colorset 3, HilightColorset 4
Style * DecorateTransient, NakedTransient
Style * Font "$[infostore.font_mono]"
Style * HandleWidth 3, BorderWidth 3
Style * BackingStore, SaveUnder
Style * EWMHMiniIconOverride

# Comment these lines if you dont like Icons to have Titles.
Style * StickyIcon
Style * IconSize 160 160, IconGrid 180 180, IconBox 180x1800+180+50, IconFill top left
Style * IconTitle, IconTitleRelief 0, IconTitleColorset 10, HilightIconTitleColorset 5
Style * IconFont "$[infostore.font_mono]"
Style * IconBackgroundRelief 0, IconBackGroundColorset 5
Style * !UseIconPosition

# !Handles, !Borders, !Title
Style "wine"                  FPLenient, NoFuncHint, NoDecorHint, NoOLDecor
Style "conky"                 !Title, Sticky, WindowListSkip, StaysOnBottom, NeverFocus
Style "plank"                 !Title, !Handles, StaysOnTop, Sticky, NeverFocus, WindowListSkip, FixedPosition
Style "gkrellm"               !Title, !Handles, StaysOnTop, Sticky, NeverFocus, WindowListSkip, FixedPosition
Style "trayer"                !Title, StaysOnTop, FixedPosition, EWMHUseStackingOrderHints
Style "stalonetray"           !Title, StaysOnTop, FixedPosition, EWMHUseStackingOrderHints
Style "google-chrome*"        !Title, FPLenient, NoFuncHint, NoDecorHint, NoOLecor, CenterPlacement, MiniIcon chrome.png
Style "Google Chrome*"        !Title, FPLenient, NoFuncHint, NoDecorHint, NoOLecor, CenterPlacement, MiniIcon chrome.png
Style "*hromium-browser*"     !Title, FPLenient, NoFuncHint, NoDecorHint, NoOLecor, CenterPlacement, MiniIcon chromium-browser.png
Style "baobab"                MiniIcon baobab.png, EWMHMiniIconOverride, BorderWidth 0, NoTitle, NoHandles
Style "gnome-calculator"      MiniIcon galculator.png, EWMHMiniIconOverride, BorderWidth 0, NoTitle, NoHandles
Style "gedit"                 MiniIcon gedit.png, EWMHMiniIconOverride, BorderWidth 0, NoTitle, NoHandles
Style "nautilus"              MiniIcon folder.png, EWMHMiniIconOverride, BorderWidth 0, NoTitle, NoHandles
Style "Geary"                 MiniIcon apps/email.pngBorder, EWMHMiniIconOverride, BorderWidth 0, NoTitle, NoHandles
Style "pcmanfm"               MiniIcon folder.png
Style "Transmission*"         MiniIcon transmission.png
Style "Nemo*"                 MiniIcon folder.png
Style "gimp"                  MiniIcon gimp.png
Style "inkscape"              MiniIcon inkscape.png
Style "emacs*"                MiniIcon emacs24.png
Style "Code*"                 MiniIcon code.png
Style "evince"                MiniIcon evince.png
Style "subl"                  MiniIcon sublime-text.png
Style "sublime_text"          MiniIcon sublime-text.png
Style "devhelp"               MiniIcon devhelp.png
Style "umbrello"              MiniIcon umbrello.png
Style "vncviewer"             MiniIcon vncviewer.png
Style "realvnc*"              MiniIcon vncviewer.png
Style "VNC Viewer"            MiniIcon vncviewer.png
Style "zeal"                  MiniIcon zeal.png
Style "atom"                  MiniIcon atom.png
Style "filezilla"             MiniIcon filezilla.png
Style "Gitg"                  MiniIcon qgit.png
Style "dia"                   MiniIcon dia.png
Style "Terminal"              MiniIcon terminal.png
Style "Tilix*"                MiniIcon terminal.png
Style "*ermini*"              MiniIcon terminal.png
Style "gnome-terminal"        MiniIcon terminal.png
Style "xfce4-terminal"        MiniIcon terminal.png
Style "termin*"               MiniIcon terminal.png
Style "xterm"                 MiniIcon terminal.png
Style "Pidgin*"               MiniIcon pidgin.png
Style "Acrobat*"              MiniIcon acroread.png
Style "Adobe*"                MiniIcon acroread.png
Style "libreoffice-writer*"   MiniIcon libreoffice-writer.png
Style "Wicd Network Manager"  CenterPlacement, MiniIcon network.png
Style "Mozilla Firefox"       CenterPlacement, MiniIcon firefox.png
Style "firefox*"              CenterPlacement, MiniIcon firefox.png
Style "Firefox*"              CenterPlacement, MiniIcon firefox.png
Style "Library"               CenterPlacement, MiniIcon firefox.png
Style "xman"                  Icon xman.xpm, ClickToFocus
Style "xmag"                  Icon mag_glass.xpm, ClickToFocus
Style "xgraph"                Icon graphs.xpm, ClickToFocus
Style "xmosaic"               Color Green/Yellow, ClickToFocus
Style "*Dialog_popup"         WindowListSkip
Style "gnome-do"              CenterPlacement, BorderWidth 0, NoTitle, NoHandles, MiniIcon find1.xpm, EWMHMiniIconOverride, WindowListSkip
Style "Do"                    CenterPlacement, BorderWidth 0, NoTitle, NoHandles, MiniIcon find1.xpm, EWMHMiniIconOverride, WindowListSkip

# Buttons
Style "FvwmButtons"           WindowListSkip, NeverFocus, NoHandles, NoTitle, StaysOnTop, Sticky
Style "FvwmPager"             BorderWidth 2, NoHandles, NeverFocus, NoTitle, StaysOnTop, Sticky, WindowListSkip, NoIconifiable
Style "FvwmTaskBar"           NoTitle, WindowListSkip, CirculateSkip, Sticky, BorderWidth 0, NoHandles, StaysOnTop, NeverFocus, Layer 0
Style "FvwmShelf"             NoTitle, StaysOnBottom, Sticky, WindowListSkip, CirculateSkip, NeverFocus, FixedSize, NoHandles
Style "FvwmDeskControl"       NoTitle, NeverFocus, CirculateSkip, WindowListSkip, Sticky, StaysOnBottom, FixedSize, NoHandles
Style "FvwmIconMan*"          NoTitle, HandleWidth 2, BorderWidth 2, Sticky, WindowListSkip, CirculateSkip, StaysOnBottom, NeverFocus

# AutoHiding Console
Style "HiddenConsole"         Sticky, WindowListSkip, Notitle, StaysOnTop, !Handles, FixedSize, FixedPosition

#######
# Colorsets
#################

# Line separator on pager
Colorset 0 fg white, bg #525252, fgsh #f9f9f9, hi #8f8f8f, sh #454545
# Active window decoration
Colorset 1 bg #535454, fg #ffffff, fgsh #f9f9f9 hi #fbfbfb, sh #171717, Tint #464646 20
# Inactive window decoration
Colorset 2 bg #444444, fg #d1d2d7, fgsh #f9f9f9, hi #8f8f8f, sh #454545, Tint #464646 60
# Default window colorset
Colorset 3 fg #999999, bg black, fgsh #a0a0a0
# Active window colorset
Colorset 4 fg #f0f0f0, bg black, fgsh #a4a4a4
# Icon colorset, balloon colorset
Colorset 5 fg white, bg #a6a6a6, fgsh black, RootTransparent
# Available
Colorset 6 fg #9a875f, bg #fa875f
# Available
Colorset 7 fg #9a875f, bg #181512
# Balloon windows colorset
Colorset 8 fg #332d29, bg #332d29
# Balloon tooltip colorset
Colorset 9 fg white, bg #686664, Plain
# Buttons, menu, icon manager background colorset
Colorset 10 fg #fffff9, bg #484644
# Pattern colorset
Colorset 11 pixmap tile_gray.png
# Icon manager select colorset
Colorset 16 fg black, bg #c6c3c6, RootTransparent buffer, Tint #e4e5c7 90
# Menu selection colorset
Colorset 21 fg #ffffff, bg #6d8d6d

# An FvwmButtons-based Taskbar
DestroyModuleConfig FvwmShelf: *
*FvwmShelf: Font "$[infostore.font_sans]"
*FvwmShelf: Columns 50
*FvwmShelf: Rows 1
*FvwmShelf: BoxSize smart
*FvwmShelf: Colorset 10
*FvwmShelf: Frame 1
*FvwmShelf: Padding 1 1
*FvwmShelf(Size 6x1, Swallow (NoKill, Respawn, UseOld) XClock 'Exec xclock -digital -twentyfour -fg black -bg gray -padding 4 -strftime "   %H:%M %a %d %b %Y " &')
*FvwmShelf(Size 36x1, Swallow "FvwmIconMan" `FvwmIconMan`)
*FvwmShelf(Size 8x1, Swallow (NoClose, Respawn, UseOld) "trayer" 'Exec trayer --SetDockType true --distance 0 --padding 10 --transparent true --tint 484644 --alpha 60 --edge top --align right --expand true --widthtype pixel --width 260 --heighttype pixel --height 28 --distancefrom right ')

# A little control panel for switching desks.
DestroyModuleConfig FvwmDeskControl: *
*FvwmDeskControl: Font "$[infostore.font_mono]"
*FvwmDeskControl: Columns 3
*FvwmDeskControl: Rows 1
*FvwmDeskControl: Colorset 10
*FvwmDeskControl: Frame 1
*FvwmDeskControl: Padding 1 1
*FvwmDeskControl: (1x1, Title "<", Action(Mouse 1) GotoDesk -1)
*FvwmDeskControl: (1x1, Title ">", Action(Mouse 1) GotoDesk 1)
*FvwmDeskControl: (1x1, Id desk, Title "$[desk.n]", Action(Mouse 1) `Next (CirculateHit, DeskControl) PipeRead 'echo LockingSlide keep $$(test $[w.y] -lt 0 && echo 0 || echo w-$$(($[w.height]-$height))p)'`)

# Main desk-switching panel
*FvwmPager: Font "$[infostore.font_mono]"
*FvwmPager: SmallFont "$[infostore.font_sans]"
*FvwmPager: Colorset * 0
*FvwmPager: HiLightColorset * 10
*FvwmPager: WindowColorsets 8 5
*FvwmPager: BalloonColorset * 9
*FvwmPager: Balloons All
*FvwmPager: BalloonFont "$[infostore.font_mono]"
*FvwmPager: BalloonYOffset +2
*FvwmPager: BalloonBorderWidth 1
*FvwmPager: MiniIcons
*FvwmPager: Label 0 "0: General"
*FvwmPager: Label 1 "1: Office"
*FvwmPager: Label 2 "2: CAD"
*FvwmPager: Label 3 "3: Other"

# Set up the geometry so that the buttons stack vertically on the left.
*FvwmButtons: Font  "$[infostore.font_sans]"
*FvwmButtons: ButtonGeometry 86x56+0+30
*FvwmButtons: Colorset 10
*FvwmButtons: BoxSize smart
*FvwmButtons: Rows 22
*FvwmButtons: Columns 1
*FvwmButtons: Frame 1
*FvwmButtons(1x2+0+0, Swallow "FvwmPager" 'FvwmPager *')
*FvwmButtons(Title Start, Icon logo.png, \
         Action (Mouse 1) "Menu MenuFvwmRoot Rectangle +94+$top 0 -100m")
*FvwmButtons(Title Browser, Icon chromium-browser.png, \
                   Action (Mouse 1) 'Exec "Chromium Browser" chromium-browser &', \
                   Action (Mouse 3) Function FuncWinPaneApp "/usr/bin/chromium-browser &" Next "New Tab - Chromium" +$left+$top)
*FvwmButtons(Title Email, Icon geary.png, Action 'Exec "Geary" geary &')
*FvwmButtons(Title Pidgin, Icon pidgin.png, Action 'Exec "Pidgin" pidgin &')
*FvwmButtons(Title Home, Icon folder.png, Action 'Exec "Nemo" nemo &')
*FvwmButtons(Title Terminal, Icon terminal.png, \
           Action (Mouse 1) 'Exec "Tilix" tilix &', \
                   Action (Mouse 3) Function FuncWinPaneApp "/usr/bin/tilix &" Next "/bin/bash" +$left+$top)
*FvwmButtons(Title Code, Icon code.png, Action 'Exec "Visual Studio Code" code &')
*FvwmButtons(Title Sublime, Icon sublime-text.png, Action 'Exec "Sublime Text" subl &')
*FvwmButtons(Title Emacs, Icon emacs24.png, Action 'Exec "Emacs Server" emacs &')
*FvwmButtons(Title VNC, Icon vncviewer.png, Action 'Exec "VNC Viewer" vncviewer &')
*FvwmButtons(Title Gitg, Icon qgit.png, Action 'Exec "Gitg" gitg &')
*FvwmButtons(Title Acrobat, Icon acroread.png, Action 'Exec "Adobe Acrobat" acroread &')
*FvwmButtons(Title Inkscape, Icon inkscape.png, Action 'Exec "Inkscape" inkscape &')
*FvwmButtons(Title Dia, Icon dia.png, Action 'Exec "Dia" dia &')
*FvwmButtons(Title Writer, Icon libreoffice-writer.png, Action 'Exec "Writer" loffice --writer &')

# DockLaunch Function
DestroyFunc DockLaunch
AddToFunc DockLaunch
+ C Any ($1) Next ($1) WindowListFunc
+ H Any ($1) WindowList ($1) Rectangle +$2+$3 0 -100m CurrentAtEnd UseListSkip SortByClass NoCurrentDeskTitle
+ C TestRc (NoMatch) Exec exec $0
+ D Exec exec $0

DestroyFunc RunProgram
AddToFunc RunProgram
+ I PipeRead `$[HOME]/.fvwm/checkrun $*`
+ I None [$0] All (FvwmButtons) Raise
+ I None [$0] WindowList
+ I TestRc (Match) Break 1
+ I Next [$0] FlipFocus
+ I Current (Iconic) IconifyAndRearrange
+ I Current Raise

# Icon Manager
DestroyModuleConfig FvwmIconMan: *
*FvwmIconMan: Font "$[infostore.font_mono]"
*FvwmIconMan: ManagerGeometry 1x1
*FvwmIconMan: ButtonGeometry 300x28
*FvwmIconMan: MaxButtonWidth 300
*FvwmIconMan: FocusAndSelectButton flat
*FvwmIconMan: FocusButton up
*FvwmIconMan: IconButton up
*FvwmIconMan: PlainButton up
*FvwmIconMan: SelectButton down
*FvwmIconMan: Action Mouse 0 N sendcommand Nop
*FvwmIconMan: Action Mouse 2 N sendcommand Thumbnail
*FvwmIconMan: Action Mouse 1 N sendcommand "Iconify off", sendcommand RaiseLower, sendcommand FlipFocus
*FvwmIconMan: Action Mouse 3 N sendcommand "Menu Window-Ops Rectangle +$left+$top 0 -100m"
*FvwmIconMan: Colorset 10
*FvwmIconMan: ReliefThickness 1
*FvwmIconMan: FocusAndSelectColorset 16
*FvwmIconMan: FocusColorset 16
*FvwmIconMan: Resolution Page
*FvwmIconMan: DrawIcons Always
*FvwmIconMan: FollowFocus True
*FvwmIconMan: UseWinList True
*FvwmIconMan: ShowOnlyIcons False
*FvwmIconMan: Title ""
*FvwmIconMan: Sort id

# Task bar
DestroyModuleConfig FvwmTaskBar: *
*FvwmTaskBar: Geometry +0-0
*FvwmTaskBar: Rows 1
*FvwmTaskBar: AutoStick
*FvwmTaskBar: UseSkipList
*FvwmTaskBar: PageOnly
*FvwmTaskBar: ShowTips
*FvwmTaskBar: NoBrightFocus
*FvwmTaskBar: 3DFvwm
*FvwmTaskBar: ClockFormat %T [%d/%m/%y]
*FvwmTaskBar: WindowButtonsRightMargin 124
*FvwmTaskBar: Font "$[infostore.font_mono]"
*FvwmTaskBar: SelFont "$[infostore.font_mono]"
*FvwmTaskBar: StatusFont "$[infostore.font_mono]"
*FvwmTaskBar: TipsBack bisque
*FvwmTaskBar: TipsFore black
*FvwmTaskBar: Colorset 10
*FvwmTaskBar: FocusColorset 16
*FvwmTaskBar: UseIconNames
*FvwmTaskBar: StartName Start
*FvwmTaskBar: StartMenu MenuFvwmRoot mouse c -100m -60p
*FvwmTaskBar: MailCheck 0

#####
# Module configurations
##################

# Animations are controlled by this module
# You could also use Frame, Lines, Turn, Twist, Random and None
DestroyModuleConfig FvwmAnimate: *
*FvwmAnimate: Effect Frame
*FvwmAnimate: Iterations 32
*FvwmAnimate: Width 2
*FvwmAnimate: Twist 0.500000
*FvwmAnimate: Delay 10

# FvwmProxy allows to see all windows
DestroyModuleConfig FvwmProxy: *
*FvwmProxy: Font "xft:snap; $[infostore.font_mono]"
*FvwmProxy: ProxyMove false

# FvwmIdent is an xwininfo replacement.
DestroyModuleConfig FvwmIdent: *
*FvwmIdent: Back MidnightBlue
*FvwmIdent: Fore #f6f6f6
*FvwmIdent: Font "xft:snap"

# FvwmScroll swallows applications into smaller containers, sometimes handy.
DestroyModuleConfig FvwmScroll: *
*FvwmScroll: Back #f6f6f6
*FvwmScroll: Fore #f6f6f6

# FIXME: This will destroy all Windowstyle settings.
# FvwmEvent
DestroyModuleConfig FvwmEvent: *
*FvwmEvent: deiconify DeThumbnail
*FvwmEvent: add_window NewWindowFunc
*FvwmEvent: focus_change "TransparencyChangeFocus"
*FvwmEvent: new_desk "SendToModule FvwmDeskControl ChangeButton desk Title $$[desk.n]"

######
# Menus
#################
MenuStyle * Hilight3DThin, PopupOffset 0 100, PopupDelay 300, TitleWarpOff
MenuStyle * TitleUnderlines2, SeparatorsLong, TrianglesSolid, Animation
MenuStyle * BorderWidth 2
MenuStyle * PopupAsSubmenu, HoldSubmenus, SubmenusRight
MenuStyle * ItemFormat "%|%5.5i%1.3l%2.3>%|"
MenuStyle * VerticalItemSpacing 1 1, VerticalTitleSpacing 2 2
MenuStyle * MenuColorset 10, HilightBack, ActiveColorset 21
MenuStyle * "$[infostore.font_sans]"
MenuStyle * MenuFace DGradient 64 Red Black

# Window Operation Menu
DestroyMenu Window-Ops
AddToMenu Window-Ops "Window Operations"        Title
+ "Windows list...%xpms/mini.windows.xpm%"      WindowList                 (CurrentDesk, AcceptsFocus, !Iconic) Root c c \
  NoGeometry IconifiedAtEnd, MaxLabelWidth 60
+ ""                                            Nop
+ "Resize%xpms/mini.resize.xpm%"                Resize
+ "Top Half%xpms/mini.maximize-horiz.xpm%"      TopHalfMix
+ "Bottom Half%xpms/mini.maximize-horiz.xpm%"   BotHalfMix
+ "Left Half%xpms/mini.maximize-vert.xpm%"      LeftHalfMix
+ "Right Half%xpms/mini.maximize-vert.xpm%"     RightHalfMix
+ ""                                            Nop
+ "(De) Iconify%xpms/mini.iconify.xpm%"         Iconify
+ "(Un) Maximize%xpms/mini.maximize1.xpm%"      Maximize-func
+ "(Un) Thumbnail%xpms/mini.zoom.xpm%"          Thumbnail
+ "(Un) Shade%xpms/mini.windowshade.xpm%"       WindowShade
+ "(Un) Stick%xpms/mini.stick1.xpm%"            Stick
+ ""                                            Nop
+ "Move%actions/move.png%"                      Move
+ "Close%xpms/small.exit.xpm%"                  Close
+ "Delete%xpms/mini.delete.xpm%"                Delete
+ "Destroy%xpms/mini.destroy.xpm%"              Destroy
+ ""                                            Nop
+ "Stays On Top%xpms/mini.raise3.xpm%"          Pick                       (CirculateHit) Layer 0 6
+ "Layer +1%xpms/mini.raise2.xpm%"              Pick                       (CirculateHit) Layer +1
+ "Stays Put%actions/nontop.png%"               Pick                       (CirculateHit) Layer 0 4
+ "Layer -1%xpms/mini.lower2.xpm%"              Pick                       (CirculateHit) Layer -1
+ "Stays On Bottom%xpms/mini.lower3.xpm%"       Pick                       (CirculateHit) Layer 0 2
+ ""                                            Nop
+ "%xpms/mini.window.xpm%Window Screenshot"     Pick                       (CirculateHit) FvwmWindowScreenshot
+ "%xpms/mini.desktop.xpm%Desktop Screenshot"   FvwmDesktopScreenshot      5
+ "Identify%xpms/mini.question.xpm%"            Module                     FvwmIdent
+ ""                                            Nop
+ "Modules%xpms/mini.modules.xpm%"              Popup                      MenuFvwmModules
+ "Send To...%xpms/mini.pager.xpm%"             Popup                      MenuPageList

DestroyMenu MenuFvwmModules
AddToMenu MenuFvwmModules
+ "%xpms/mini.fvwm.xpm%Banner"                  Module                     FvwmBanner
+ "%xpms/mini.desktop.xpm%Expose"               Module                     FvwmExpose
+ "%xpms/mini.xterm.xpm%Quake-style Console"    Module                     StartHiddenConsole
+ ""                                            Nop
+ "%xpms/small.exit.xpm%Stop modules"           Popup                      MenuFvwmStopModule

DestroyMenu MenuFvwmStopModule
AddToMenu MenuFvwmStopModule
+ "%xpms/mini.xterm.xpm%Stop Quake-style Console"   KillModule             StartHiddenConsole

DestroyMenu MenuPageList
AddToMenu MenuPageList
+ "%workspaces/workspace-1.png%Desktop 1"   Pick MoveToPage 0 0
+ "%workspaces/workspace-2.png%Desktop 2"   Pick MoveToPage 1 0
+ "%workspaces/workspace-3.png%Desktop 3"   Pick MoveToPage 2 0
+ "%workspaces/workspace-4.png%Desktop 4"   Pick MoveToPage 0 1
+ "%workspaces/workspace-5.png%Desktop 5"   Pick MoveToPage 1 1
+ "%workspaces/workspace-6.png%Desktop 6"   Pick MoveToPage 2 1

######
# Window decorations
#################
#
# +----------------------------------------------------------+
# | X  X  X                                          X  X  X |
# +----------------------------------------------------------+
# | 1  3  5                                          6  4  2 |
# |                                                          |
#
# Vectors are basically just a set of co-ordinates, each button is a grid
# of 100x100 points (or you can use pixels..it's up to you), following
# each vector you must specify a line type:
#
#   @0 Shadow (sh)
#   @1 Hilight (hi)
#   @2 Background (bg)
#   @3 Foreground (fg)
#   @4 Invisible (just move the pointer, dont draw anything)

DestroyDecor MyDecoration
AddToDecor   MyDecoration
+ TitleStyle -- Raised
+ TitleStyle Centered Height 26
+ TitleStyle InActive (Colorset 2 -- Flat ) Active (Colorset 1 -- Flat)
+ AddTitleStyle Active (TiledPixmap tile_solid-1.png) \
    Inactive (TiledPixmap tile_gray.png)
+ ButtonStyle All -- UseTitleStyle
+ ButtonStyle All InActive (Colorset 2 -- Flat) -- HiddenHandles
+ ButtonStyle All Active (Colorset 1  -- Raised)
+ ButtonStyle 1 ActiveUp Vector 4 30x30@3 60x60@3 60x30@4 30x60@3
+ ButtonStyle 1 ActiveDown Vector 4 30x30@3 60x60@3 60x30@4 30x60@3
+ ButtonStyle 1 Inactive Vector 4 30x30@3 60x60@3 60x30@4 30x60@3
+ ButtonStyle 4 ActiveUp Vector 5 30x60@3 60x60@3 60x50@3 30x50@3 30x60@3
+ ButtonStyle 4 ActiveDown Vector 5 30x60@3 60x60@3 60x50@3 30x50@3 30x60@3
+ ButtonStyle 4 Inactive Vector 5 30x60@3 60x60@3 60x50@3 30x50@3 30x60@3
+ ButtonStyle 3 ActiveUp Vector 2 30x60@3 60x60@3 60x50@3 30x50@3 30x60@3
+ ButtonStyle 3 ActiveDown Vector 2 30x60@3 60x60@3 60x50@3 30x50@3 30x60@3
+ ButtonStyle 3 Inactive Vector 2 30x60@3 60x60@3 60x50@3 30x50@3 30x60@3
+ ButtonStyle 2 ActiveUp Vector 7 30x30@3 30x60@3 60x60@3 60x30@3 30x30@3 30x35@3 60x35@3
+ ButtonStyle 2 ActiveDown Vector 7 30x30@3 30x60@3 60x60@3 60x30@3 30x30@3 30x35@3 60x35@3
+ ButtonStyle 2 Inactive Vector 7 30x30@3 30x60@3 60x60@3 60x30@3 30x30@3 30x35@3 60x35@3

#####
# Re-define our own functions
##################
#
# The letter before the action tells what kind of action triggers the
# command which follows it.
#   I: Immediate
#   M: Motion (user moves the mouse)
#   C: Click
#   H: Hold
#   D: Double-click

DestroyFunc FvwmEval
AddToFunc   FvwmEval
+ I SendToModule FvwmPerl eval $*

######
# Start function
#################
AddToFunc StartFunction
+ I Test (Init) Exec exec fvwm-root --dither --retain-pixmap $[fvwm_wallpaper]
+ I PipeRead 'mkdir -p $[fvwm_cache]'
+ I Exec rm $[fvwm_cache]/* 2>/dev/null
+ I FvwmButtons
+ I Module FvwmProxy
+ I Module FvwmCommandS
+ I Module FvwmAnimate
+ I Module FvwmEvent
+ I Module FvwmProxy
+ I Module FvwmButtons -g 88x24+0+0 FvwmDeskControl
+ I Module FvwmPerl
+ I FvwmEval use POSIX
+ I PipeRead "echo Module FvwmButtons -g $$(($[vp.width]-100))x28-0+0 FvwmShelf"
+ I Test (Restart) All (Iconic) Test (f $[fvwm_cache]/icon.tmp.$[w.id].png) WindowStyle IconOverride, \
  Icon $[fvwm_cache]/icon.tmp.$[w.id].png
+ I Read modules/Menu
+ I GotoPage 0 0
# + I FvwmAuto FvwmAutohide -menter FuncAutoEnter
# + I Test (Init) StartHiddenConsole

######
# Init function
#################
DestroyFunc InitFunction
AddToFunc   InitFunction
+ I Exec exec xrdb ~/.Xresources
+ I Exec exec feh --bg-scale $[fvwm_wallpaper]
+ I Exec exec bash -c 'if [ `getconf LONG_BIT` = "64" ]; then /usr/lib/x86_64-linux-gnu/notify-osd; else /usr/lib/i386-linux-gnu/notify-osd; fi'
+ I Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then compton -b -c; fi'
+ I Exec exec conky
+ I Exec exec vncconfig -nowin
# Tray section
+ I PipeRead 'echo SetEnv systray_started `ps -e | grep -c trayer`'
# + I Test (EnvMatch systray_started 0 ) break
# Insync
+ I Test (x insync) Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then insync start; fi'
+ I Test (x insync) Exec exec bash -c 'if [ $DISPLAY = ":99" ]; then insync start; fi'
# Dropbox
+ I Test (x dropbox) Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then dropbox start; fi'
+ I Test (x dropbox) Exec exec bash -c 'if [ $DISPLAY = ":99" ]; then dropbox start; fi'
+ I Test (x dropbox) Exec exec bash -c 'if [ $DISPLAY = ":1" ]; then ~/.dropbox-dist/dropboxd; fi'
# Google Music Manager
+ I Test (x google-musicmanager) Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then google-musicmanager; fi'
+ I Test (x google-musicmanager) Exec exec bash -c 'if [ $DISPLAY = ":99" ]; then google-musicmanager; fi'
# HP systray
+ I Test (x hp-systray) Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then hp-systray; fi'
+ I Test (x hp-systray) Exec exec bash -c 'if [ $DISPLAY = ":99" ]; then hp-systray; fi'
# Skype
+ I Test (x skype) Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then skype; fi'
# Clipboard
+ I Test (x clipit) Exec exec clipit
+ I TestRc (!Match) Test (x parcellite) Exec exec parcellite
# Volume
+ I Test (x volumeicon) Exec exec volumeicon
# Network
+ I Test (x nm-applet) Exec exec nm-applet
# Bluetooth
+ I Test (x blueman-applet) Exec exec blueman-applet

######
# Pane functions
#################
DestroyFunc FuncWinPaneApp
AddToFunc FuncWinPaneApp
+ C Any ("$2") $1 ("$2") WindowListFunc
+ C TestRc (NoMatch) Exec $0
+ H WindowList ("$2") Rectangle $3 0 -100m NoGeometry NoCurrentDeskTitle
+ D Exec $0

DestroyFunc FuncWinPaneReset
AddToFunc FuncWinPaneReset
+ I PipeRead "echo SendToModule FvwmButtons ChangeButton CmdTime Title \"`date +\"%H:%M\"`\""
+ I PipeRead "echo SendToModule FvwmButtons ChangeButton CmdDate Title \"`date +\"%d.%m.%Y\"`\""
# Schedule Periodic 1000 FuncWinPaneReset

######
# Thumbnailing functions
#################
DestroyFunc Thumbnail
AddToFunc Thumbnail
+ I Raise
+ I ThisWindow (!Iconic) SetEnv Icon-$[w.id] $[w.iconfile]
+ I ThisWindow (!Shaded, Iconifiable, !Iconic) PipeRead \
    "xwd -silent -id $[w.id] | convert -scale 128 -frame 1x1 \
    -mattecolor black -quality 0 xwd:- png:$[fvwm_cache]/icon.tmp.$[w.id].png \
    && echo WindowStyle IconOverride, Icon $[fvwm_cache]/icon.tmp.$[w.id].png \
    || echo Nop"
+ I TestRc (Match) Test (f $[w.miniiconfile], f $[fvwm_cache]/icon.tmp.$[w.id].png) PipeRead \
    "composite -geometry +2+4 $[w.miniiconfile] $[fvwm_cache]/icon.tmp.$[w.id].png \
    $[fvwm_cache]/icon.tmp.$[w.id].png; echo Nop"
+ I Iconify

DestroyFunc DeThumbnail
AddToFunc DeThumbnail
+ I PipeRead "echo Test \\(i \\$\\[Icon-$[w.id]\\]\\) WindowStyle Icon \\$\\[Icon-$[w.id]\\]"
+ I TestRc (NoMatch) WindowStyle NoIconOverride, Icon
+ I Exec rm -f $[fvwm_cache]/icon.tmp.$[w.id].png
+ I All (Iconic, CurrentPage) PlaceAgain icon
+ I UnsetEnv Icon-$[w.id]

DestroyFunc ReThumbnail
AddToFunc   ReThumbnail
+ I Iconify
+ I Thumbnail

######
# Expose function
#################
DestroyFunc FvwmExpose
AddToFunc FvwmExpose
+ I AddToMenu FvwmExposeMenu "e x p o s e" Title
+ I + DynamicPopDownAction DestroyMenu FvwmExposeMenu
+ I All (!Iconic !Shaded AcceptsFocus)\
    PipeRead "echo Raise; \
        xwd -silent -id $[w.id] | convert -scale $$(($[w.width]/10)) -quality 0 xwd:- \
        png:$[fvwm_cache]/tmp/icon.exp.$[w.id].png \
    && echo AddToMenu FvwmExposeMenu \
    %$[fvwm_cache]/tmp/icon.exp.$[w.id].png%\\\'\"$[w.name]\"\\\' WindowID $[w.id] WarpToWindow 50 50 \
        && echo AddToMenu FvwmExposeMenu \\\"\\\" Nop \
    || Nop"
+ I Popup FvwmExposeMenu
+ I Exec exec rm -f $[fvwm_cache]/tmp/icon.exp.*

######
# Transparecy function
#################
DestroyFunc TransparencyChangeFocus
AddToFunc TransparencyChangeFocus
# + I Next (!Focused) Exec exec transset -i $[w.id] 0.5
+ I Next (!Focused) PipeRead "(echo -n nofocused; xwininfo -id $[w.id] | grep '^xwininfo') >> /tmp/log"
# + I Prev (Focused) Exec exec transset -i $[w.id] 1
+ I Prev (Focused) PipeRead "(echo -n focused; xwininfo -id $[w.id] | grep '^xwininfo') >> /tmp/log"
# + I Next (!Focused) Echo 'lose $[w.id]'
# + I Prev (Focused) Echo 'get $[w.id]'

######
# Screenshot functions (uses ImageMagick)
#################
DestroyFunc FvwmWindowScreenshot
AddToFunc   FvwmWindowScreenshot
+ I ThisWindow (!Shaded !Iconic Iconifiable) \
  Exec import -window $[w.id] -quality 100 -silent \
  "~/Pictures/Screenshots/screenshot-`date +%F[%R]`.$[w.id].jpg"
+ I Exec notify-send "Window screenshot was taken."

DestroyFunc FvwmDesktopScreenshot
AddToFunc   FvwmDesktopScreenshot
+ I Exec sleep $0; import -window root -quality 100 -silent \
  "~/Pictures/Screenshots/screenshot-`date +%F[%R]`.jpg"
+ I Exec notify-send "Desktop screenshot was taken."

######
# Tiling functions
#################
#
# From http://www.fvwmforums.org/phpBB3/viewtopic.php?t=3049
# window states 1-9 representing the positions as they would on a numpad
# i.e. 1 = lower-left corner; 9 = upper-right corner; 2 = bottom half of screen;
# 8 = top half of screen; 6 = right half of screen; 3 = bottom-right corner; etc.

DestroyFunc TileFunc
AddToFunc TileFunc
+ I Function ClearTileStatesFunc
+ I State $0 True
+ I ResizeMoveMaximize Frame $1 $2 $3 $4
+ I Current (State 10) Maximize True 100 -1p ewmhiwa

DestroyFunc ClearTileStatesFunc
AddToFunc ClearTileStatesFunc
+ I State 1 False
+ I State 2 False
+ I State 3 False
+ I State 4 False
+ I State 5 False
+ I State 6 False
+ I State 7 False
+ I State 8 False
+ I State 9 False

DestroyFunc UnTileFunc
AddToFunc UnTileFunc
+ I Maximize False
+ I Function ClearTileStatesFunc
+ I State 5 On

DestroyFunc TileLeftFunc
AddToFunc TileLeftFunc
# if not tiled, tile left
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 4 48wa 98wa 0 0
+ I TestRc (Match) Break
# if tiled bottom-left, then tile left
+ I Current (State 1) Function TileFunc 4 48wa 98wa 0 0
+ I State 1 False
+ I TestRc (Match) Break
# if tiled bottom, then tile bottom-left
+ I Current (State 2) Function TileFunc 1 48wa 48wa 0 50
+ I State 2 False
+ I TestRc (Match) Break
# if tiled bottom-right, then tile bottom
+ I Current (State 3) Function TileFunc 2 98wa 48wa 0 50
+ I State 3 False
+ I TestRc (Match) Break
# if tiled left, reduce to quarter screen
+ I Current (State 4) Function TileFunc 4 48wa 98wa 0 0
+ I TestRc (Match) Break
# if tiled middle, tile left
+ I Current (State 5) Function TileFunc 4 48wa 98wa 0 0
+ I State 5 False
+ I TestRc (Match) Break
# if tiled right, then untile and remove tiled states
+ I Current (State 6) Function UnTileFunc
+ I TestRc (Match) Break
# if tiled top-left, then tile left
+ I Current (State 7) Function TileFunc 4 48wa 98wa 0 0
+ I State 7 False
+ I TestRc (Match) Break
# if tiled up, then tile top-left
+ I Current (State 8) Function TileFunc 7 48wa 48wa 0 0
+ I State 8 False
+ I TestRc (Match) Break
# if tiled top-right, then tile top
+ I Current (State 9) Function TileFunc 8 48wa 48wa 0 0
+ I State 9 False
+ I TestRc (Match) Break
# if tiled fullscreen, then untile
+ I Current (State 10) Function TileFunc 4 48wa 98wa 0 0
+ I State 10 False
+ I TestRc (Match) Break

DestroyFunc TileRightFunc
AddToFunc TileRightFunc
# if not tiled, tile right
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 6 48wa 98wa 50 0
+ I TestRc (Match) Break
# if tiled bottom-left, tile to bottom
+ I Current (State 1) Function TileFunc 2 98wa 48wa 0 50
+ I State 1 False
+ I TestRc (Match) Break
# if tiled bottom, then tile bottom-right
+ I Current (State 2) Function TileFunc 3 48wa 48wa 50 50
+ I State 2 False
+ I TestRc (Match) Break
# if tiled bottom-right, then tile to right
+ I Current (State 3) Function TileFunc 6 48wa 98wa 50 0
+ I State 3 False
+ I TestRc (Match) Break
# if tiled left, then untile
+ I Current (State 4) Function UnTileFunc
+ I TestRc (Match) Break
# if tiled middle, tile right
+ I Current (State 5) Function TileFunc 6 48wa 48wa 50 0
+ I State 5 False
+ I TestRc (Match) Break
# if tiled right, then reduce to quarter size
+ I Current (State 6) Function TileFunc 6 48wa 98wa 50 0
+ I TestRc (Match) Break
# if tiled top-left, then tile top
+ I Current (State 7) Function TileFunc 8 98wa 48wa 0 0C
+ I State 7 False
+ I TestRc (Match) Break
# if tiled up, then tile top-right
+ I Current (State 8) Function TileFunc 9 48wa 48wa 50 0
+ I State 8 False
+ I TestRc (Match) Break
# if tiled top-right, then tile right
+ I Current (State 9) Function TileFunc 6 48wa 98wa 50 0
+ I State 9 False
+ I TestRc (Match) Break
# if tiled fullscreen, then untile
+ I Current (State 10) Function TileFunc 6 48wa 48wa 50 0
+ I State 10 False
+ I TestRc (Match) Break

DestroyFunc TileUpFunc
AddToFunc TileUpFunc
# if not tiled, tile up
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 5 98wa 48wa 0 0
+ I TestRc (Match) Break
# if tiled bottom-left, tile to left
+ I Current (State 1) Function TileFunc 4 48wa 98wa 0 0
+ I State 1 False
+ I TestRc (Match) Break
# if tiled bottom, then untile
+ I Current (State 2) Function UnTileFunc
+ I TestRc (Match) Break
# if tiled bottom-right, then tile right
+ I Current (State 3) Function TileFunc 6 48wa 98wa 50 0
+ I State 3 False
+ I TestRc (Match) Break
# if tiled left, then tile top left
+ I Current (State 4) Function TileFunc 7 48wa 48wa 0 0
+ I State 4 False
+ I TestRc (Match) Break
# if tiled middle, tile up
+ I Current (State 5) Function TileFunc 8 98wa 48wa 0 0
+ I State 5 False
+ I TestRc (Match) Break
# if tiled right, then tile top right
+ I Current (State 6) Function TileFunc 9 48wa 48wa 50 0
+ I State 6 False
+ I TestRc (Match) Break
# if tiled top-left, then do nothing
+ I Current (State 7) Function TileFunc 8 98wa 48wa 0 0
+ I State 7 False
+ I TestRc (Match) Break
# if tiled up, then do maximize
+ I Current (State 8) TileFunc 10 98wa 98wa 0 0
+ I State 8 False
+ I TestRc (Match) Break
# if tiled top-right, then do nothing
+ I Current (State 9) TileFunc 8 98wa 48wa 0 0
+ I State 9 False
+ I TestRc (Match) Break
# if tiled fullscreen, then untile
+ I Current (State 10) UnTileFunc
+ I State 10 False
+ I TestRc (Match) Break

DestroyFunc TileDownFunc
AddToFunc TileDownFunc
# if not tiled, tile down
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 2 98wa 48wa 0 50
+ I TestRc (Match) Break
# if tiled bottom-left, then tile down
+ I Current (State 1) Function TileFunc 2 98wa 48wa 0 50
+ I State 1 False
+ I TestRc (Match) Break
# if tiled bottom, go fullscreen
+ I Current (State 2) TileFunc 10 98wa 98wa 0 0
+ I State 2 False
+ I TestRc (Match) Break
# if tiled bottom-right, then tile down
+ I Current (State 3) Function TileFunc 2 98wa 48wa 0 50
+ I State 3 False
+ I TestRc (Match) Break
# if tiled left, then tile bottom left
+ I Current (State 4) Function TileFunc 1 48wa 48wa 0 50
+ I State 4 False
+ I TestRc (Match) Break
# if tiled middle, tile down
+ I Current (State 5) Function TileFunc 2 98wa 48wa 0 50
+ I State 5 False
+ I TestRc (Match) Break
# if tiled right, then tile bottom right
+ I Current (State 6) Function TileFunc 3 48wa 48wa 50 50
+ I State 6 False
+ I TestRc (Match) Break
# if tiled top-left, then tile left
+ I Current (State 7) Function TileFunc 4 48wa 98wa 0 0
+ I State 7 False
+ I TestRc (Match) Break
# if tiled up, then untile
+ I Current (State 8) UnTileFunc
+ I State 8 False
+ I TestRc (Match) Break
# if tiled top-right, then tile right
+ I Current (State 9) Function TileFunc 6 48wa 98wa 50 0
+ I State 9 False
+ I TestRc (Match) Break
# if tiled fullscreen, then untile
+ I Current (State 10) UnTileFunc
+ I State 10 False
+ I TestRc (Match) Break

DestroyFunc TopHalfMix
AddToFunc   TopHalfMix
+ I TileUpFunc
+ I State 8 on

DestroyFunc LeftHalfMix
AddToFunc   LeftHalfMix
+ I TileLeftFunc
+ I State 4 on

DestroyFunc BotHalfMix
AddToFunc   BotHalfMix
+ I TileDownFunc
+ I State 2 on

DestroyFunc RightHalfMix
AddToFunc   RightHalfMix
+ I TileRightFunc
+ I State 6 on

######
# Window manipulation functions
#################

DestroyFunc FullScreen
AddToFunc   FullScreen
+ I Maximize True 100 -1p ewmhiwa
+ I State 10 on

DestroyFunc Maximize-func
AddToFunc Maximize-func
+ I SetEnv TEMP $[0]
+ I ThisWindow (!Maximized) Maximize True 100 -1p ewmhiwa, \
  WindowStyle FixedPosition, FixedSize, ResizeHintOverride, \
  State 10 on, State 5 False
+ I TestRc (NoMatch) ThisWindow (Maximized) UnMaximizeWithFS
+ I InfoStoreAdd x_$[w.id] $[w.x]
+ I InfoStoreAdd y_$[w.id] $[w.y]
+ I InfoStoreAdd width_$[w.id] $[w.width]
+ I InfoStoreAdd height_$[w.id] $[w.height]
+ I Test (EnvMatch TEMP animate) \
        SendToModule FvwmAnimate animate \
    $[w.x] $[w.y] $[w.width] $[w.height] \
    0 0 $[vp.width] $[vp.height]
+ I UnsetEnv TEMP

DestroyFunc MaximizeWithFS
AddToFunc   MaximizeWithFS
+ I WindowStyle !Borders, !Handles, BorderWidth 0, HandleWidth 0, !Title, ResizeHintOverride
+ I UpdateStyles
+ I State 10 on
+ I State 5 False
+ I Maximize $*

DestroyFunc UnMaximizeWithFS
AddToFunc   UnMaximizeWithFS
+ I Maximize false
+ I UnTileFunc
+ I State 10 False
+ I State 5 on
+ I DestroyWindowStyle
+ I UpdateStyles
+ I Raise
+ I UpdateStyles

DestroyFunc PickWindowRaiseAndDeiconify
AddToFunc PickWindowRaiseAndDeiconify
 + I Pick
 + I TestRc (Error) Break
 + I Raise
 + I Focus
 + I Iconify off

DestroyFunc Move-or-Raise
AddToFunc Move-or-Raise
+ I Raise
+ D Maximize-func
+ C Raise
+ C Focus
+ M Move

DestroyFunc Move-or-Iconify
AddToFunc Move-or-Iconify
+ I Raise
+ D Maximize-func
+ M Move
+ C Iconify

DestroyFunc Resize-or-Raise
AddToFunc Resize-or-Raise
+ I Raise
+ D Maximize-func
+ C Raise
+ C Focus
+ M Resize

######
# Window-moving functions
#################

DestroyFunc MoveRight
AddToFunc   MoveRight
+ I AnimatedMove w+20p keep

DestroyFunc MoveLeft
AddToFunc MoveLeft
+ I AnimatedMove w+-20p keep

DestroyFunc MoveUp
AddToFunc MoveUp
+ I AnimatedMove keep w+-20p

DestroyFunc MoveDown
AddToFunc MoveDown
+ I AnimatedMove keep w+20p

DestroyFunc ShrinkEast
AddToFunc ShrinkEast
+ I PipeRead "echo Resize $(($[cw.width] - 15))p keep"

DestroyFunc GrowEast
AddToFunc GrowEast
+ I PipeRead "echo Resize $(($[cw.width] + 15))p keep"

DestroyFunc ShrinkSouth
AddToFunc ShrinkSouth
+ I PipeRead "echo Resize keep $(($[cw.height] - 15))p"

DestroyFunc GrowSouth
AddToFunc GrowSouth
+ I PipeRead "echo Resize keep $(($[cw.height] + 15))p"

######
# Wheel scrolling function
#################
DestroyFunc WheelScroll
AddToFunc WheelScroll I PipeRead 'case $0 in \
      up) test $[page.ny] -eq $$(($[desk.pagesy]-1)) -a $[page.nx] -lt $$(($[desk.pagesx]-1)) \
         && echo GotoPage +1p 0 \
         || echo GotoPage 0p +1p;; \
      down) test $[page.ny] -eq 0 -a $[page.nx] -gt 0 \
         && echo GotoPage -1p $$(($[desk.pagesy]-1)) \
         || echo GotoPage 0p -1p;; \
   esac'

######
# Show desktop function
#################
DestroyFunc ShowDesktop
AddToFunc ShowDesktop
+  I All (AcceptsFocus CurrentPage !Iconic !Shaded !ButtonDocks) Iconify

######
# Custom functions
#################

######
# Autohide console example: http://dev.gentoo.org/~taviso/autohide_console.png
#################
AddToFunc Autohide
+ I ThisWindow ($0) Deschedule $[w.id]
+ I TestRc (!Match) Deschedule -$[w.id]
+ I ThisWindow ($0) ThisWindow (shaded) AutohideShow $1 $3
+ I TestRc (!Match) All ($0, !shaded) AutohideHide $2 $3

AddToFunc AutohideShow
+ I Schedule $0 -$[w.id] WindowShade $1 off
+ I Schedule $0 -$[w.id] Raise
+ I Schedule $0 -$[w.id] Deschedule $[w.id]
+ I Schedule $0 -$[w.id] Deschedule -$[w.id]

AddToFunc AutohideHide
+ I Schedule $0 $[w.id] WindowShade $1 on
+ I Schedule $0 $[w.id] Deschedule $[w.id]
+ I Schedule $0 $[w.id] Deschedule -$[w.id]

DestroyFunc StartHiddenConsole
AddToFunc StartHiddenConsole
+ I Exec exec rxvt +sb -geometry 144x8+2+0 -name HiddenConsole
+ I Wait HiddenConsole
+ I Autohide HiddenConsole 250 0 N

DestroyFunc FuncAutoEnter
AddToFunc FuncAutoEnter I Autohide HiddenConsole 250 500 N

######
# Custom Window manipulation functions
#################

# Used by the WindowList command. Replaces the builtin function.
DestroyFunc WindowListFunc
AddToFunc WindowListFunc
+ I ThisWindow (Iconic) DeIconifyWindow
+ I ThisWindow FlipFocus NoWarp
+ I ThisWindow Raise
+ I ThisWindow (FvwmButtons) WarpToWindow 30 30

# Makes a window "dance"
DestroyFunc Jiggle
AddToFunc Jiggle
+ I PipeRead "for ((y=$0;y>=0;y--)) do \
    printf 'AnimatedMove w+%up w+%up\\nAnimatedMove w-%up w-%up\\n' \
    ${y} ${y} ${y} ${y}; done"

# Used when new window pops up (for special events)
DestroyFunc NewWindowFunc
AddToFunc NewWindowFunc
+ I ThisWindow (xmessage) Jiggle 5

######
# Mouse bindings
#################
#
# Mouse 0 is special to fvwm, meaning "any" mouse button
# Recall that mouse formats look like this:
# +------------+
# | ||  ||  || |
# |            |
# +------------+
#   1   2   3
#
#
# Contexts:                                  Desktop
#     R = Root Window                 rrrrrrrrrrrrrrrrrrrrrr
#     W = Application Window          rIrrrrFSSSSSSSSSFrrrrr
#     F = Frame Corners               rrrrrrS13TTTT642Srrrrr
#     S = Frame Sides                 rIrrrrSwwwwwwwwwSrrrrr
#     T = Title Bar                   rrrrrrSwwwwwwwwwSrrrrr
#     I = Icon                        rIrrrrFSSSSSSSSSFrrrrr
#                                     rrrrrrrrrrrrrrrrrrrrrr
# Numbers are buttons: 1 3 5 7 9   0 8 6 4 2
#
# Modifiers: (A)ny, (C)ontrol, (S)hift, (M)eta, (N)othing
#
# Buttons:
# +----------------------------------------------------------+
# | X  X  X  X  X                              X  X  X  X  X |
# +----------------------------------------------------------+
# | 1  3  5  7  9                              0  8  6  4  2 |
# |                                                          |

# Windows close,max,mini buttons
#     Button Context   Modifi  Function
Mouse 0      4          A      Iconify
Mouse 0      2          A      Maximize-func
Mouse 0      1          A      Close
Mouse 0      3          A      Menu Window-Ops Nop
Mouse 1      4          A      Iconify
Mouse 1      2          A      Maximize-func
Mouse 1      1          A      Close
Mouse 1      3          A      Menu Window-Ops Nop

# Main pop-up menus
#     Button Context   Modifi  Function
Mouse 3      R          N      Menu MenuFvwmRoot Nop
Mouse 3      R          A      Menu MenuFvwmRoot Nop
Mouse 2      R          N      WindowList

# When you click the edge of a window
#     Button Context   Modifi  Function
Mouse 1      F          A      Resize-or-Raise
Mouse 1      T          A      Move-or-Raise
Mouse 1      I          A      Move-or-Iconify
Mouse 2      T          A      WindowList
Mouse 3      T          A      Menu Window-Ops Nop

# Roll mouse wheel anywhere with Shift-Ctrl + cursor left/right for goto page
Mouse 4      A         SC      GotoPage +1p +0p
Mouse 5      A         SC      GotoPage -1p +0p

# Roll mouse wheel anywhere with Shift-Meta + cursor left/right for goto page
# with active window
Mouse 4      A         SM      MoveAndGotoPage +1p +0p
Mouse 5      A         SM      MoveAndGotoPage -1p +0p

######
# Key bindings
#################
#
# Keyname Context Modifi  Function
# Keyname is a standard X11 key name as defined in /usr/include/X11/keysymdef.h,
# (without the XK_ prefix), or the keysym database /usr/X11R6/lib/X11/XKeysymDB
# A=anywhere, C/M/S=control/meta/shift
# Modifier 4 is the left "Windows" key

######
# Ignore L (caps-lock) 2 (Numlock) and 5 (scroll lock) keys as modifiers
# pretty much mandatory for key bindings to work properly, especially laptops
#################
IgnoreModifiers L25

######
# Window-list bindings
#################

# Alt + Tab: Switch focus to the next non-iconic window
Key Tab A M WindowList (CurrentDesk, AcceptsFocus, !Iconic) Root c c \
  NoCurrentDeskTitle, NoGeometry, CurrentAtEnd, \
  IconifiedAtEnd, MaxLabelWidth 60, SelectOnRelease Meta_L

# Shift + Alt + Tab: Switch focus to the previous non-iconic window
Key Tab A SM WindowList (CurrentDesk, AcceptsFocus, !Iconic) Root c c \
  NoCurrentDeskTitle, NoGeometry, CurrentAtEnd, ReverseOrder, \
  IconifiedAtEnd, MaxLabelWidth 60, SelectOnRelease Meta_L

# Super + Tab: Switch focus and deiconify the next iconic window
Key Tab A 4 WindowList (CurrentDesk, Iconic) Root c c \
  NoCurrentDeskTitle, NoGeometry, ReverseOrder, MaxLabelWidth 60, \
  SelectOnRelease Super_L

# Shift + Super_L + Tab:  Switch focus and deiconify the next iconic window
Key Tab A S4 WindowList (CurrentDesk, Iconic) Root c c \
  NoCurrentDeskTitle, NoGeometry, MaxLabelWidth 60, \
  SelectOnRelease Super_L

######
# Key bindings using Alt + Fn
#################
#   Keyname Context  Modifi Function
Key F1       A       M      Menu MenuFvwmRoot Nop
Key F2       A       M      Menu Window-Ops   Nop
Key F3       A       M      WindowList
Key F4       A       M      SendToModule FvwmProxy ShowToggle
Key F5       A       M      Move
Key F6       A       M      FvwmExpose
Key F10      A       M      Maximize-func


######
# Key Bindings: ctrl-arrow tile windows, alt-arrow moves windows
#################
#   Keyname Context  Modifi Function
Key Left     A       C      TileLeftFunc
Key Right    A       C      TileRightFunc
Key Up       A       C      TileUpFunc
Key Down     A       C      TileDownFunc
Key Left     A       M      MoveLeft
Key Right    A       M      MoveRight
Key Up       A       M      MoveUp
Key Down     A       M      MoveDown

######
# Switch pages via keypad (no modifier)
#################
#   Keyname  Context Modifi Function
Key KP_Home  A       N      GotoPageFocus 0 0
Key KP_Up    A       N      GotoPageFocus 1 0
Key KP_Prior A       N      GotoPageFocus 2 0
Key KP_Left  A       N      GotoPageFocus 0 1
Key KP_Begin A       N      GotoPageFocus 1 1
Key KP_Right A       N      GotoPageFocus 2 1
Key KP_End   A       N      GotoPageFocus 0 2
Key KP_Down  A       N      GotoPageFocus 1 2
Key KP_Next  A       N      GotoPageFocus 2 2

######
# Move windows to strategic points on the current page via shift-keypad
#################
#   Keyname  Context Modifi Function
Key KP_Home  A       S      Move     0                   0
Key KP_End   A       S      Move     0                  -0
Key KP_Prior A       S      Move    -0                   0
Key KP_Next  A       S      Move    -0                  -0
Key KP_Up    A       S      MoveUp
Key KP_Down  A       S      MoveDown
Key KP_Left  A       S      MoveLeft
Key KP_Right A       S      MoveRight
Key KP_Begin A       S      PipeRead 'fvwm_center_window $[vp.width] $[vp.height] $[w.width] $[w.height]'

######
# Move a window to a different page via alt-keypad
#################
#   Keyname  Context Modifi Function
Key KP_Home  A       M      MoveToPage 0 0
Key KP_Up    A       M      MoveToPage 1 0
Key KP_Prior A       M      MoveToPage 2 0
Key KP_Left  A       M      MoveToPage 0 1
Key KP_Begin A       M      MoveToPage 1 1
Key KP_Right A       M      MoveToPage 2 1
Key KP_End   A       M      MoveToPage 0 2
Key KP_Down  A       M      MoveToPage 1 2
Key KP_Next  A       M      MoveToPage 2 2

######
# Move a window and follow it via ctrl-keypad
#################
#   Keyname  Context Modifi Function
Key KP_Home  A       C      MoveAndGotoPage 0 0
Key KP_Up    A       C      MoveAndGotoPage 1 0
Key KP_Prior A       C      MoveAndGotoPage 2 0
Key KP_Left  A       C      MoveAndGotoPage 0 1
Key KP_Begin A       C      MoveAndGotoPage 1 1
Key KP_Right A       C      MoveAndGotoPage 2 1
Key KP_End   A       C      MoveAndGotoPage 0 2
Key KP_Down  A       C      MoveAndGotoPage 1 2
Key KP_Next  A       C      MoveAndGotoPage 2 2

######
# Pulseaudio keys
#################
Key XF86AudioRaiseVolume   A N   Exec notify-send " " -i notification-audio-volume-medium -h int:value:$(pactl set-sink-volume 0 +10% | grep -m 1 "%]" | cut -d "[" -f2|cut -d "%" -f1) -h string:synchronous:volume
Key XF86AudioLowerVolume   A N   Exec notify-send " " -i notification-audio-volume-medium -h int:value:$(pactl set-sink-volume 0 -10% | grep -m 1 "%]" | cut -d "[" -f2|cut -d "%" -f1) -h string:synchronous:volume
Key XF86AudioMute          A N   Exec pactl set-sink-mute 0 toggle
Key XF86KbdBrightnessUp    A N   Exec xbacklight -inc 10
Key XF86KbdBrightnessDown  A N   Exec xbacklight -dec 10

######
# Mouse gestures
#################
#
# Syntax reminder:
#
#   1   2   3
#
#   4   5   6
#
#   7   8   9
#
# Stroke Sequence Button Context Modifiers Function
#
# I use mouse gestures in Opera and Mozilla, so I've duplicated some common ones here.
# To try these out, hold down the Left mouse button and trace the pattern on the Root
# Window, the sequence is a pattern on the grid above, so 14789 would be down then Right.
# First, define a StrokeFunc.
#
# Without this, you would have to execute all of your gestures entirely on the Root
# Window, This lets you change the Context and have a few other Neat Features, such as
# DrawMotion, which will draw a line as you make your Gesture (Neat!).
# There is also EchoSequence, Feedback and NotStayPressed.
#
# Note: EchoSequence prints sequences to STDERR.
#################
Mouse 1 R A     StrokeFunc DrawMotion FeedBack StrokeWidth 1

# Down, Then Up.
Stroke 25852 0 R N  Refresh

# Directions...
Stroke 456 0 R N    GotoPage +1p 0p
Stroke 654 0 R N    GotoPage -1p 0p
Stroke 852 0 R N    GotoPage 0p -1p
Stroke 258 0 R N    GotoPage 0p +1p

# Diagonal...
Stroke 159 0 R N    GotoPage +1p +1p
Stroke 951 0 R N    GotoPage -1p -1p
Stroke 357 0 R N    GotoPage -1p +1p
Stroke 753 0 R N    GotoPage +1p -1p

#####
# Quit
#
# Down, Then Right.
#
# Dont worry about running this gesture by accident,
# you will be asked to confirm
#################
Stroke 14789 0 R N  Module FvwmForm FvwmForm-QuitVerify

####
# Up, Then Down: Close a window.
#
# Note that you can also enter the sequence as it appears on your
# Numeric Keypad, by preceding the sequence with an `N`.
#
# The FVWM developers think of everything :)
#################
Stroke N25852 0 R N Pick Close

# Start a Web Browser
Stroke N1478963 0 R N Exec exec firefox

# Make a new Sticky Note
Stroke N1598753 0 R N Exec exec xpad

# The following settings are interpreted by EMACS, do not remove them.
# Local Variables:
# mode: shell-script
# fill-column: 80
# coding: utf-8
# End:
