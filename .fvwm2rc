# vim: sts=0:noet:syntax=fvwm:foldmethod=marker

SetEnv fvwm_cache $[HOME]/.fvwm.cache
SetEnv fvwm_userdir $[HOME]/.fvwm
SetEnv fvwm_images $[fvwm_userdir]/images
SetEnv fvwm_wallpaper $[fvwm_userdir]/images/wallpapers/4800x3600-haven-i-see-stars.png
Setenv fvwm_colors $[HOME]/.fvwm/images/colors
ModulePath $[fvwm_userdir]:$[fvwm_userdir]/modules:+

#######
# Preferred applications
#################

SetEnv fvwm_browser google-chrome
SetEnv fvwm_terminal tilix
SetEnv fvwm_editor "emacs -nw"
SetEnv fvwm_mail "xterm -e mutt"
SetEnv fvwm_player "xterm -e vlc"
SetEnv fvwm_filemanager nemo
SetEnv fvwm_image_viewer feh
SetEnv fvwm_runner gmrun

#######
# The default ImagePath for icons is:
# /usr/include/X11/bitmap:/usr/include/X11/pixmaps
#################

ImagePath $[fvwm_userdir]/images
ImagePath +:$[fvwm_userdir]/images/scalable
ImagePath +:$[fvwm_userdir]/images/scalable/apps
ImagePath +:$[fvwm_userdir]/images/icons
ImagePath +:$[fvwm_userdir]/images/icons/apps
ImagePath +:$[fvwm_userdir]/images/tiles
ImagePath +:$[fvwm_userdir]/images/xpms
ImagePath +:$[fvwm_userdir]/images/workspaces
ImagePath +:$[fvwm_cache]
IconPath  $[fvwm_userdir]/images/scalable/apps

#######
# Variables (InfoStore)
#################

# Set resolution using xrandr
PipeRead "echo InfoStoreAdd resolution `bash ~/.screenlayout/layout.sh`"

# used for 'Switching focus between windows. (ALT-Tab)' functionality
InfoStoreAdd DIR Next

# wallpaper directory. Should be changed to the right directory if needed
InfoStoreAdd fvwm_wallpaper_dir $[fvwm_userdir]/images/wallpapers

# actual wallpaper
InfoStoreAdd fvwm_wallpaper $[fvwm_wallpaper]

# actual pager height. Needed for the "top bar" modules
PipeRead 'echo InfoStoreAdd fvwm_taskbar_height $(($[vp.height]/25))'
InfoStoreAdd fvwm_taskbar_height 28

# fvwm buttons dimensions
InfoStoreAdd fvwm_buttons_rows 66
PipeRead 'echo InfoStoreAdd fvwm_buttons_height $(($[vp.height]/$[infostore.fvwm_buttons_rows]))'
InfoStoreAdd fvwm_buttons_width 70

# Adjust ratio to calculate resolution dependant things
PipeRead "echo InfoStoreAdd aspect_ratio `perl -e 'printf \"%.2f\",$[vp.width]/$[vp.height]'`"

# find the smallest resolution depending on the aspect ratio
PipeRead `perl -e 'if ($[infostore.aspect_ratio] > 2.0) { \
                         print "InfoStoreAdd ref_width 800\\n"; \
                         print "InfoStoreAdd ref_height 384\\n"; \
                   } elsif ($[infostore.aspect_ratio] > 1.6) { \
                         print "InfoStoreAdd ref_width 960\\n"; \
                         print "InfoStoreAdd ref_height 540\\n"; \
                   } elsif ($[infostore.aspect_ratio] > 1.4) { \
                         print "InfoStoreAdd ref_width 960\\n"; \
                         print "InfoStoreAdd ref_height 640\\n"; \
                   } else { \
                         print "InfoStoreAdd ref_width 800\\n"; \
                         print "InfoStoreAdd ref_height 600\\n"; \
                   }'`

# InfoStoreAdd ratio 1.1
PipeRead "echo InfoStoreAdd ratio `perl -e 'printf \"%.2f\",log($[vp.width]*$[vp.height])/log(10)-log($[infostore.ref_width]*$[infostore.ref_height])/log(10)+1'`"

# InfoStoreAdd hratio 0.8
PipeRead "echo InfoStoreAdd hratio `perl -e 'printf \"%.2f\",($[vp.height]/540)'`"

# InfoStoreAdd wratio 2
PipeRead "echo InfoStoreAdd wratio `perl -e 'printf \"%.2f\",($[vp.width]/800)'`"

# Fonts
InfoStoreAdd fontsize 11
InfoStoreAdd font_sans "xft:Meslo:size=$[infostore.fontsize]:encoding=iso10646-1"
InfoStoreAdd font_mono "xft:Cascadia Code:size=$[infostore.fontsize]:encoding=iso10646-1"
DefaultFont "$[infostore.font_mono]"
WindowFont "$[infostore.font_sans]"

######
# Resize and move feedback windows in the center of the screen
#################
Emulate mwm

######
# Use an arrow rather than the `X` cursor on the root window.
#################
CursorStyle root top_left_arrow
CursorStyle stroke hand2

#####
# Viewport and Virtual Desktop Setup
# You can automatically move the viewport into adjacent pages when the pointer
# hits the screen edge, but I dont like this.
# EdgeThickness disables edge scrolling and EdgeCommand, which I never use.
#################
DeskTopSize 3x3
EdgeScroll 0 0
EdgeThickness 1
EdgeResistance 400

######
# Use colormaps according to Focus, rather than where the Mouse is.
#################
ColormapFocus FollowsFocus

#######
# Colorsets
#################

# 0 = Line separator on pager
# 1 = Active window decoration (buttons)
# 2 = Inactive window decoration (buttons)
# 3 = Default window colorset (border)
# 4 = Active window colorset (border)
# 5 = Icon background colorset, balloon colorset
# 6 = Available
# 7 = Available
# 8 = Balloon windows colorset; active selections
# 9 = Balloon tooltip colorset
# 10 = Buttons, menu, icon manager background colorset
# 11 = Selection colorset for Menu
# 12 = Selection colorset for Icon Manager
# 13 = Pattern colorset
# 14 = Transparent colorset
# 15 = Rounded dock
# 16 = Rounded dock

Colorset 0 fg white, bg #3b3c37, fgsh #f9f9f9, hi #8f8f8f, sh #454545
Colorset 1 bg #3b3c37, fg #ffffff, fgsh #f9f9f9, hi #fbfbfb, sh #171717, Tint #3b3c37 20
Colorset 2 bg #3b3c37, fg #d1d2d7, fgsh #f9f9f9, hi #8f8f8f, sh #454545, Tint #3b3c37 60
Colorset 3 fg #999999, bg #3b3c37, fgsh #a0a0a0
Colorset 4 fg #f0f0f0, bg #3b3c37, fgsh #a4a4a4
Colorset 5 fg white, bg #a6a6a6, fgsh #3b3c37, RootTransparent
Colorset 6 fg #9a875f, bg #fa875f
Colorset 7 fg #9a875f, bg #181512
Colorset 8 fg white, bg #332d29
Colorset 9 fg white, bg #332d29, Plain
Colorset 10 fg #fffff9, bg #484644
Colorset 11 fg #ffffff, bg #6d8d6d
Colorset 12 fg #fffff9, bg #484644, RootTransparent buffer, Tint #484644 98
Colorset 13 RootTransparent, fg #fffff9, NoShape, TiledPixmap tile_gray.png
Colorset 14 fg Black, NoShape, RootTransparent buffer, Tint white 20
Colorset 15 RootTransparent, fg rgb:00/00/00, bg #6d8d6d, \
  Tint white 40, bgTint white 40, Shape dock-mask.xpm
Colorset 16 RootTransparent, fg rgb:00/00/00, bg #6d8d6d, \
  Tint white 40, bgTint white 40, RootTransparent

#####
# OpaqueMoveSize allows you to stop Large windows from being moved opaquely,
# I like the effect, and have Cycles to burn, so all windows can use it.
#################
OpaqueMoveSize -1

#####
# Animations points
#################
SetAnimation  10  -.01 0 .01 .03 .08 .18 .3 .45 .6 .75 .85 .90 .94 .97 .99 1.0

#####
# http://www.fvwm.org/documentation/faq/#5.5
#################
IgnoreModifiers L2

#####
# 'rubber-band' window-borders when moving and resizing windows.
XORvalue 208
#################

#####
# You can use EwmhBaseStruts to stop Maximised windows, and new windows from obscuring
# TaskBars/ButtonBars or anything else you always want to be visible.
#
# This Setting makes sure my ButtonBar on the left and taskbar along the bottom is always
# visible, if you would like some windows to ignore this setting when being placed or Maximized,
# you can set the EWMHPlacementIgnoreWorkingArea or EWMHMaximizeIgnoreWorkingArea Style options.
#
# you can also use the ewmhiwa flag on ceratin Maximize commands, so you could have one menu
# option for normal maximization, and one for full-screen maximization.
# Syntax: EwmhBaseStruts left right top bottom
#################
PipeRead 'echo EwmhBaseStruts $(($[infostore.fvwm_buttons_width]+0)) 0 $(($[infostore.fvwm_taskbar_height]+0)) 0'

######
# Fvwm uses a default ClickTime of 150ms, which is way too short for me.
# A Click that lasts <= ClickTime is considered a `Click` in functions,
# > ClickTime is a `Hold`.
# Remember that if you have a function that has actions on Click (C) and
# DoubleClick (D), fvwm will have to wait at least this long so it can tell which
# action you are trying to make.
#################
ClickTime 550

######
# FlickeringMoveWorkaround disables ConfigureNotify events that
# are usually sent to an application while it is moved. If some
# windows flicker annoyingly while being moved, this option may
# help you. Note that if this problem occurs it is not an fvwm
# bug, it is a problem of the application.
#################
BugOpts FlickeringMoveWorkaround True

######
# Display a BusyCursor whenever fvwm doesn't accept any input
#################
BusyCursor DynamicMenu True, ModuleSynchronous True, Read False, Wait False

# In Style statements, *’s are wild cards, so ‘Style *’ says apply this style to every window.
# This is followed by a list of styles separated by commas that you wish to use.

#####
# SnapAttraction lets nearby windows snap together, or snap to edges so that they
# are easier to align on your desktop, The default is off, if you set it too large
# it's annoying as hell, 3 pixels is just right.
#################
Style * SnapAttraction 3 SameType

#######
# MWM emulation:
# 1) mwm-style border reliefs (less deep than default fvwm) ?
# 2) maximize button does mwm-inversion thing; nice buttons (ugly window border?)
# 3) makes fvwm attempt to recognize and respect the mwm decoration hints
# that applications occasionally use
#################
Style * MWMDecor, MWMBorder, MWMFunctions, MWMButtons

#######
# Ignore Gnome application hints
#################
Style * !GnomeUseHints
Style * GNOMEIgnoreHints

#######
# makes fvwm shade out operations that mwm would prohibit, but it lets
# you perform the operation anyway
#################
Style * HintOverride

#######
# Use EWMH hints and respect EWMH hints which change the window layer.
#################
Style * EWMHUseStackingOrderHints, !EWMHDonateIcon, \
    !EWMHDonateMiniIcon, EWMHUseStrutHints, EWMHUseStateHints, \
    EWMHPlacementUseWorkingArea, EWMHPlacementUseDynamicWorkingArea

#######
# The WindowShadeSteps option selects the number of steps for animation
# when shading a window with WindowShade.
#################
Style * WindowShadeSteps 120, WindowShadeShrinks, WindowShadeLazy

#######
# NoPPosition instructs fvwm to ignore the PPosition field in window geometry hints.
# Emacs annoyingly sets PPosition to (0,0)!
#################
Style * NoPPosition, NoTransientPPosition

#######
# Eye Candy preference of watching resize live
#################
Style * ResizeOutline, ResizeOpaque

#######
# TileCascadePlacement automatically places new windows in a smart
# location - a location in which they do not overlap any other windows
# on the screen.
#################
Style * TileCascadePlacement

#######
# Similar focus behavior to xfce/openbox.
#################
Style * SloppyFocus
Style * ClickToFocus
Style * RaiseTransient
Style * LowerTransient
Style * StackTransientParent
Style * ParentalRelativity

#######
# FP-related functions
#################
Style * FPSortWindowlistByFocus

#######
# The focus policy. Once you are used to clicking *inside* windows to
# raise them you will not want to lose this feature.
# FPClickToFocus, FPClickDecorToFocus or FPClickIconToFocus,
# Click inside the window, modification occurs; when the icon, the window receives focus.
#################
Style * FPClickToFocus

#######
# Click Raise window (Clicking at the window to raise it)
#################
Style * FPClickRaisesFocused

######
# FPEnterToFocus, when the pointer enters the window, the window receives focus
#################
Style * FPEnterToFocus

# Window behavior
Style * UseDecor DefaultDecor
Style * Colorset 3, HilightColorset 4
Style * DecorateTransient, NakedTransient
Style * Font "$[infostore.font_mono]"
Style * HandleWidth 3, BorderWidth 2
Style * BackingStore, SaveUnder
Style * EWMHMiniIconOverride

# Indexed window names to make sure
# each window name is unique
Style * IndexedWindowName

# Comment these lines if you dont like Icons to have Titles.
Style * StickyIcon
Style * IconSize 100 100 100 100
Style * IconTitle, IconTitleRelief 0, IconTitleColorset 10, HilightIconTitleColorset 8
Style * IconFont "$[infostore.font_mono]:Medium"
Style * IconBackgroundPadding 6, IconBackgroundRelief 2, IconBackGroundColorset 5
Style * !UseIconPosition

#  Placement policy for the thumbnail icons.
Style * IconBox $[vp.width]x300-20-74, IconGrid 235 150, IconFill right bottom

# Default application icon
Defaulticon "application-default-icon.svg:24x24"
Style * MiniIcon "application-default-icon.svg:16x16"

# !Handles, !Borders, !Title
Style "wine"                  FPLenient, NoFuncHint, NoDecorHint, NoOLDecor
Style "conky"                 !Title, Sticky, WindowListSkip, NeverFocus
Style "plank"                 !Title, !Handles, StaysOnTop, Sticky, NeverFocus, WindowListSkip, FixedPosition
Style "gkrellm"               !Title, !Handles, StaysOnTop, Sticky, NeverFocus, WindowListSkip, FixedPosition
Style "trayer"                !Title, StaysOnTop, FixedPosition, EWMHUseStackingOrderHints
Style "stalonetray"           !Title, StaysOnTop, FixedPosition, EWMHUseStackingOrderHints
Style "google-chrome*"        CenterPlacement, MiniIcon "google-chrome.svg:16x16"
Style "Google-chrome*"        CenterPlacement, MiniIcon "google-chrome.svg:16x16"
Style "Google Chrome*"        CenterPlacement, MiniIcon "google-chrome.svg:16x16"
Style "*hromium-browser*"     CenterPlacement, MiniIcon "chromium-browser.svg:16x16"
Style "baobab"                MiniIcon baobab.png, EWMHMiniIconOverride, BorderWidth 0, !Title, !Handles
Style "gnome-calculator"      MiniIcon "gcalculator.svg:24x24", EWMHMiniIconOverride, BorderWidth 0, !Title, !Handles
Style "gedit"                 MiniIcon "gedit.svg:16x16", EWMHMiniIconOverride, BorderWidth 0, !Title, !Handles
Style "nautilus"              MiniIcon "folderhome.svg:16x16", EWMHMiniIconOverride, BorderWidth 0, !Title, !Handles
Style "Geary*"                MiniIcon "email.svg:16x16", EWMHMiniIconOverride, BorderWidth 0, !Title, !Handles
Style "Mailspring*"           MiniIcon "email.svg:16x16"
Style "pcmanfm"               MiniIcon "folderhome.svg:16x16"
Style "Nm*"                   MiniIcon "network-manager.svg:16x16"
Style "Transmission*"         MiniIcon "transmission.svg:16x16"
Style "Nemo*"                 MiniIcon "folderhome.svg:16x16"
Style "gimp"                  MiniIcon "gimp.svg:16x16"
Style "inkscape"              MiniIcon "inkscape.svg:16x16"
Style "emacs*"                MiniIcon "emacs.svg:16x16"
Style "Code*"                 MiniIcon "code.svg:16x16"
Style "VSCodium*"             MiniIcon "code.svg:16x16"
Style "*CLion*"               MiniIcon "clion.svg:16x16"
Style "*QtCreator*"           MiniIcon "qtcreator.svg:16x16"
Style "*Wing*"                MiniIcon "wing32.svg:16x16"
Style "evince"                MiniIcon "evince.svg:16x16"
Style "subl"                  MiniIcon "sublime.svg:16x16"
Style "sublime_text"          MiniIcon "sublime.svg:16x16"
Style "Brackets*"             MiniIcon "brackets.svg:16x16"
Style "devhelp"               MiniIcon "devhelp.svg:16x16"
Style "umbrello"              MiniIcon "umbrello.svg:16x16"
Style "vncviewer"             MiniIcon "vncviewer.svg:16x16"
Style "realvnc*"              MiniIcon "vncviewer.svg:16x16"
Style "VNC Viewer"            MiniIcon "vncviewer.svg:16x16"
Style "Vmware*"               MiniIcon "vmware.svg:16x16"
Style "Virtual*"              MiniIcon "virt-manager.svg:16x16"
Style "Gnome-boxes*"          MiniIcon "virt-manager.svg:16x16"
Style "dockstation*"          MiniIcon "dockstation.svg:16x16"
Style "kitematic*"            MiniIcon "dockstation.svg:16x16"
Style "zeal"                  MiniIcon "zeal.svg:16x16"
Style "atom"                  MiniIcon "atom.svg:16x16"
Style "Typora"                MiniIcon "typora.svg:16x16"
Style "Postman"               MiniIcon "postman.svg:16x16"
Style "filezilla"             MiniIcon "filezilla.svg:16x16"
Style "git-cola*"             MiniIcon "github.svg:16x16"
Style "Gitg"                  MiniIcon "github.svg:16x16"
Style "dia"                   MiniIcon "dia.svg:16x16"
Style "Terminal"              MiniIcon "terminal.svg:16x16"
Style "Tilix*"                MiniIcon "terminator.svg:16x16"
Style "*ermini*"              MiniIcon "terminal.svg:16x16"
Style "gnome-terminal"        MiniIcon "terminal.svg:16x16"
Style "xfce4-terminal"        MiniIcon "terminal.svg:16x16"
Style "termin*"               MiniIcon "terminal.svg:16x16"
Style "xterm"                 MiniIcon "terminal.svg:16x16"
Style "Xterm*"                MiniIcon "terminal.svg:16x16"
Style "urxvt*"                MiniIcon "terminal.svg:16x16"
Style "Pidgin*"               MiniIcon "pidgin.svg:16x16"
Style "Slack*"                MiniIcon "slack.svg:16x16"
Style "discord*"              MiniIcon "discord.svg:16x16"
Style "Acrobat*"              MiniIcon "acroread.svg:16x16"
Style "Adobe*"                MiniIcon "acroread.svg:16x16"
Style "Master*"               MiniIcon "masterpdfeditor3.svg:16x16"
Style "Steam*"                MiniIcon "steam.svg:16x16"
Style "Meld*"                 MiniIcon "meld.svg:16x16"
Style "Crossover*"            MiniIcon "crossover.svg:16x16"
Style "Nxplayer*"             MiniIcon "nomachine.svg:16x16"
Style "*NoMachine*"           MiniIcon "nomachine.svg:16x16"
Style "Soffice*"              MiniIcon "libreofficewriter.svg:16x16"
Style "Matlab*"               MiniIcon "matlab.svg:16x16"
Style "MATLAB*"               MiniIcon "matlab.svg:16x16"
Style "Mathematica*"          MiniIcon "mathematica.svg:16x16"
Style "Wicd Network Manager"  CenterPlacement, MiniIcon network.png
Style "Mozilla Firefox"       CenterPlacement, MiniIcon "firefox.svg:16x16"
Style "firefox*"              CenterPlacement, MiniIcon "firefox.svg:16x16"
Style "Firefox*"              CenterPlacement, MiniIcon "firefox.svg:16x16"
Style "Library"               CenterPlacement, MiniIcon "firefox.svg:16x16"
Style "xman"                  Icon xman.xpm, ClickToFocus
Style "xmag"                  Icon mag_glass.xpm, ClickToFocus
Style "xgraph"                Icon graphs.xpm, ClickToFocus
Style "Quartus*"              MiniIcon "altera_quartus.svg:16x16"
Style "Vivado*"               MiniIcon "xilinx.svg:16x16"
Style "sdkmanager*"           MiniIcon "nvidia.svg:16x16"
Style "notify*"               MiniIcon "notification.svg:16x16"

# Buttons
Style "FvwmButtons"           BorderWidth 0, WindowListSkip, NeverFocus, !Handles, !Title, StaysOnTop, Sticky
Style "FvwmPager"             BorderWidth 0, !Handles, NeverFocus, !Title, StaysOnTop, Sticky, WindowListSkip, NoIconifiable
Style "FvwmTaskBar"           NoTitle, WindowListSkip, CirculateSkip, Sticky, BorderWidth 0, !Handles, StaysOnTop, NeverFocus, Layer 0
Style "FvwmShelf"             BorderWidth 0, NoTitle, StaysOnBottom, Sticky, WindowListSkip, CirculateSkip, NeverFocus, FixedSize, NoHandles
Style "FvwmDeskControl"       !Title, NeverFocus, CirculateSkip, WindowListSkip, Sticky, StaysOnBottom, FixedSize, NoHandles, BorderWidth 0
Style "FvwmIconMan*"          !Handles, !Title, BorderWidth 0, Sticky, WindowListSkip, CirculateSkip, StaysOnBottom, NeverFocus
Style "FvwmConky"             BorderWidth 0, WindowListSkip, NeverFocus, NoHandles, !Title, StaysOnBottom, Sticky

# AutoHiding Console
Style "HiddenConsole"         Sticky, WindowListSkip, !Title, StaysOnTop, !Handles, FixedSize, FixedPosition

###########################################################
# Bottom Bar
###########################################################

DestroyModuleConfig BottomBar
*BottomBar: Geometry 1366x34+0-10
*BottomBar: Columns 1
*BottomBar: Rows 1
*BottomBar: Padding 0 0
*BottomBar: Frame 0
*BottomBar: Colorset 5
*BottomBar: (1x1, Swallow "bmpanel" 'Exec bmpanel2 --theme=transpy')

###########################################################
# FvwmButtons-based Top Taskbar
###########################################################

DestroyModuleConfig FvwmShelf: *
PipeRead 'echo *FvwmShelf: Geometry         $(($[vp.width]-$[infostore.fvwm_buttons_width]))x$[infostore.fvwm_taskbar_height]-0+0'
*FvwmShelf: Font "$[infostore.font_sans]"
*FvwmShelf: Columns 50
*FvwmShelf: Rows 1
*FvwmShelf: BoxSize smart
*FvwmShelf: Colorset 8
*FvwmShelf: ActiveColorset 8
*FvwmShelf: Frame 1
*FvwmShelf: Padding 1 1
*FvwmShelf(Size 6x1, Swallow (NoKill, Respawn, UseOld) "XClock" \
                `Exec xclock -digital -face 'Iosevka:style=Regular:pixelsize=18' -twentyfour -bg rgb:48/46/44 -fg white -padding 1 -strftime "  %H:%M %a %d %b %Y " &`, \
                Action (Mouse 1) \
                `Exec exec xterm -g 80x20 -n Fvwm-Calendar -T Fvwm-Calendar -fg white -bg black -e 'echo Calendar; while [ 1 ]; do clear;calendar|head -10; sleep 600; done'`,\
                Action (Mouse 3) \
                `Exec exec xclock -bg rgb:48/46/44 -fg white`)
# *FvwmShelf(Size 31x1, Swallow "bmpanel" 'Exec bmpanel2')
*FvwmShelf(Size 36x1, Swallow "FvwmIconMan" \
                `FvwmIconMan`)
# *FvwmShelf(Size 6x1, Frame 0, Swallow (Kill, Respawn, UseOld) "Trayer" \
#                `Exec exec trayer --SetDockType true --distance 0 --padding 10 --transparent true --alpha 20 --tint 3b3c37 --edge top --align right --expand true --widthtype pixel --width 280 --heighttype pixel --height 28 --distancefrom right &`)

###########################################################
# Top panel for switching desks
###########################################################

DestroyModuleConfig FvwmDeskControl: *
*FvwmDeskControl: Font "$[infostore.font_mono]"
*FvwmDeskControl: Columns 3
*FvwmDeskControl: Rows 1
*FvwmDeskControl: Colorset 10
*FvwmDeskControl: Frame 1
*FvwmDeskControl: Padding 1 1
*FvwmDeskControl: (1x1, Title "<", Action(Mouse 1) GotoDesk -1)
*FvwmDeskControl: (1x1, Title ">", Action(Mouse 1) GotoDesk 1)
*FvwmDeskControl: (1x1, Id desk, Title "$[desk.n]", Action(Mouse 1) `Next (CirculateHit, DeskControl) PipeRead 'echo LockingSlide keep $$(test $[w.y] -lt 0 && echo 0 || echo w-$$(($[w.height]-$height))p)'`)

###########################################################
# Main desk-switching panel
###########################################################

*FvwmPager: Font "$[infostore.font_mono]"
*FvwmPager: SmallFont "$[infostore.font_sans]:Small"
*FvwmPager: Colorset * 0
*FvwmPager: Frame 0
*FvwmPager: HiLightColorset * 10
*FvwmPager: WindowColorsets 8 5
*FvwmPager: BalloonColorset * 9
*FvwmPager: Balloons All
*FvwmPager: BalloonFont "$[infostore.font_mono]"
*FvwmPager: BalloonYOffset +2
*FvwmPager: BalloonBorderWidth 2
*FvwmPager: MiniIcons
*FvwmPager: Label 0 "0: Desk"
*FvwmPager: Label 1 "1: Code"
*FvwmPager: Label 2 "2: CAD"
*FvwmPager: Label 3 "3: Other"

###########################################################
# Left-aligned dock bar
###########################################################

*FvwmButtons: Font  "$[infostore.font_sans]:Small"
PipeRead 'echo *FvwmButtons: Geometry         $[infostore.fvwm_buttons_width]x$(($[infostore.fvwm_buttons_height]*$[infostore.fvwm_buttons_rows]))+0+0'
PipeRead 'echo *FvwmButtons: ButtonGeometry   $[infostore.fvwm_buttons_width]x$[infostore.fvwm_buttons_height]'
*FvwmButtons: Colorset 10
*FvwmButtons: ActiveColorset 8
*FvwmButtons: PressColorset 8
*FvwmButtons: BoxSize smart
*FvwmButtons: Padding 1 1
PipeRead 'echo *FvwmButtons: Rows             $[infostore.fvwm_buttons_rows]'
*FvwmButtons: Columns 1
*FvwmButtons: Frame 0
*FvwmButtons(1x6, Swallow "FvwmPager" 'FvwmPager *')
*FvwmButtons(1x4, Swallow (NoClose,UseOld) "wmcalclock" \
                  `Exec exec wmcalclock`, \
                  Padding 1 1, \
                  Action (Mouse 3) \
                  `Exec exec orage`, \
                  Action (Mouse 1) \
                  `Exec exec xterm -g 80x20 -n Fvwm-Calendar -T Fvwm-Calendar -fg white -bg black -e 'echo Calendar; while [ 1 ]; do clear;gcalcli agenda | head -20; sleep 600; done'`,\
                  ActiveColorset 8)
*FvwmButtons(1x4, Title Start, Icon 'starthereubuntu.svg:24x24', \
                  Action (Mouse 1) 'Menu MenuFvwmRoot Rectangle +70+$top 0 -100m', \
                  Action (Mouse 3) All (AcceptsFocus CurrentPage !'xdaliclock' !Iconic !Shaded) Thumbnail)
*FvwmButtons(1x4, Title Browser, Icon "google-chrome.svg:24x24", \
                  Action (Mouse 1) 'Exec "Google Chrome" google-chrome &', \
                  Action (Mouse 3) `WindowList (Chromium-browser) NoGeometry, NoCurrentDeskTitle`)
*FvwmButtons(1x4, Title Docker, Icon "dockstation.svg:24x24", Action 'Exec "Dockstation" dockstation &')
*FvwmButtons(1x4, Title Home, Icon "folderhome.svg:24x24", Action 'Exec "Nemo" nemo &')
*FvwmButtons(1x4, Title XTerm, Icon "terminator.svg:24x24", \
                  Action (Mouse 1) 'Exec "Tilix" tilix &', \
                  Action (Mouse 3) `WindowList (Tilix) NoGeometry, \
                  NoCurrentDeskTitle`)
*FvwmButtons(1x4, Title Matlab, Icon "matlab.svg:24x24", Action 'Exec "Matlab" /opt/Matlab/R2019a/bin/matlab -desktop &')
*FvwmButtons(1x4, Title Code, Icon "code.svg:24x24", Action 'Exec "Visual Studio Code" code &')
*FvwmButtons(1x4, Title WingIDE, Icon "wing32.svg:24x24", Action 'Exec "WingIDE," wing7.1 &')
*FvwmButtons(1x4, Title Mail, Icon "email.svg:24x24", Action 'Exec "Mail" mailspring &')
*FvwmButtons(1x4, Title VNC, Icon "vncviewer.svg:24x24", \
                  Action (Mouse 1) 'Exec "realvnc-vncviewer" vncviewer &', \
                  Action (Mouse 3) `WindowList (realvnc-vncviewer) NoGeometry, NoCurrentDeskTitle`)
*FvwmButtons(1x4, Title Pidgin, Icon "pidgin.svg:24x24", Action 'Exec "Pidgin" pidgin &')
*FvwmButtons(1x4, Title VM, Icon "virt-manager.svg:24x24", Action 'Exec "Qemu Manager" virt-manager -c qemu+ssh://localhost/system &')

###########################################################
# Icon Manager
###########################################################

DestroyModuleConfig FvwmIconMan: *
*FvwmIconMan: Font "$[infostore.font_mono]"
*FvwmIconMan: ManagerGeometry 1x1
*FvwmIconMan: ButtonGeometry 300x28
*FvwmIconMan: MaxButtonWidth 300
*FvwmIconMan: FocusAndSelectButton down
*FvwmIconMan: FocusButton down
*FvwmIconMan: IconButton up
*FvwmIconMan: PlainButton up
*FvwmIconMan: SelectButton down
*FvwmIconMan: Action Mouse 0 N sendcommand Nop
*FvwmIconMan: Action Mouse 2 N sendcommand Thumbnail
*FvwmIconMan: Action Mouse 1 N sendcommand "Iconify off", sendcommand RaiseLower, sendcommand FlipFocus
*FvwmIconMan: Action Mouse 3 N sendcommand "Menu Window-Ops Rectangle $left+$top 0 -100m"
*FvwmIconMan: ReliefThickness 2
*FvwmIconMan: Colorset 12
*FvwmIconMan: FocusAndSelectColorset 8
*FvwmIconMan: FocusColorset 8
*FvwmIconMan: Resolution Page
*FvwmIconMan: DrawIcons Always
*FvwmIconMan: FollowFocus True
*FvwmIconMan: UseWinList True
*FvwmIconMan: ShowOnlyIcons False
*FvwmIconMan: Title ""
*FvwmIconMan: Sort id

###########################################################
# Task bar (not used)
###########################################################

DestroyModuleConfig FvwmTaskBar: *
*FvwmTaskBar: Geometry +0-0
*FvwmTaskBar: Rows 1
*FvwmTaskBar: AutoStick
*FvwmTaskBar: UseSkipList
*FvwmTaskBar: PageOnly
*FvwmTaskBar: ShowTips
*FvwmTaskBar: NoBrightFocus
*FvwmTaskBar: 3DFvwm
*FvwmTaskBar: ClockFormat %T [%d/%m/%y]
*FvwmTaskBar: WindowButtonsRightMargin 124
*FvwmTaskBar: Font "$[infostore.font_mono]"
*FvwmTaskBar: SelFont "$[infostore.font_mono]"
*FvwmTaskBar: StatusFont "$[infostore.font_mono]"
*FvwmTaskBar: TipsBack bisque
*FvwmTaskBar: TipsFore black
*FvwmTaskBar: Colorset 10
*FvwmTaskBar: FocusColorset 11
*FvwmTaskBar: UseIconNames
*FvwmTaskBar: StartName Start
*FvwmTaskBar: StartMenu MenuFvwmRoot mouse c -100m -60p
*FvwmTaskBar: MailCheck 0

###########################################################
# Conky screenlet window
###########################################################

DestroyModuleConfig FvwmConky: *
PipeRead 'echo *FvwmConky: Geometry         1x$(($[vp.height]/1))-0+0'
PipeRead 'echo *FvwmConky: ButtonGeometry   1x$(($[vp.height]/4))'
*FvwmConky: Columns 1
*FvwmConky: Rows 2
*FvwmConky: Padding 0 0
*FvwmConky: BoxSize smart
*FvwmConky: Frame 0
*FvwmConky: Colorset 14
*FvwmConky: (1x1, Swallow (NoClose, Respawn, UseOld) "Conky" \
                 `Exec exec conky &`)

###########################################################
# LowerLeft dock
###########################################################

DestroyModuleConfig FvwmLowerLeft: *
PipeRead 'echo *FvwmLowerLeft: Geometry         $[infostore.fvwm_buttons_width]x$(($[infostore.fvwm_buttons_height]*8+16))'
PipeRead 'echo *FvwmLowerLeft: ButtonGeometry   $[infostore.fvwm_buttons_width]x$(($[infostore.fvwm_buttons_height]*4+2))'
*FvwmLowerLeft: Columns 1
*FvwmLowerLeft: Rows 8
*FvwmLowerLeft: BoxSize fixed
*FvwmLowerLeft: Frame 1
*FvwmLowerLeft: Colorset 10
*FvwmLowerLeft: ActiveColorset 8
*FvwmLowerLeft: PressColorset 8
*FvwmLowerLeft(1x4, Swallow(NoClose,UseOld,NoHints,Respawn) "bubblemon" \
                    `Exec exec bubblemon`, \
                    Action (Mouse 1) \
                    `Exec exec gnome-system-monitor`, \
                    Action (Mouse 3) \
                    `Exec exec xload -bg rgb:48/46/44 -fg white -update 3`, \
                    Padding 3 4)
*FvwmLowerLeft(1x4, Swallow (NoClose,UseOld) "wmhdplop" `Exec exec \
                    wmhdplop -t -d /dev/sda -d /dev/sdb -d /dev/sdc -d /dev/sdd`, \
                    Padding 3 4, \
                    Action (Mouse 1) \
                    `Exec exec baobab`, \
                    Action (Mouse 3) \
                    `Exec exec gnome-disks`)

################
#
# ButtonDock Functions. These collection of functions create
#   single icon buttons that cause the button to hover above
#   everything when the mouse is moved atop of it.  To get these
#   to work it should only take copying all the five functions
#   CreateDock, EnterHandler, LeaveHandler, RestoreButton
#   and CreateActiveButton.  Then call the function 'CreateDock'
#   for each button on the dock bar. The function works as follows:
#
# CreateDock '$0' '$1' '$2' '$3' '$4' '$5' '$6' '$7' '$8' '$9'
#   $0 -> ButtonId
#   $1 -> Geometry
#   $2 -> Icon
#   $3 -> LargeIcon
#   $4 -> X offset (from upper left hand corner)
#   $5 -> Y offset (from upper left hand corner)
#   $6 -> action for Mouse 1
#   $7 -> action for Mouse 2
#   $8 -> action for Mouse 3
#   $9 -> Size of LargeIcon
#
###################################
DestroyFunc CreateDock
AddToFunc CreateDock
+ I DestroyModuleConfig FvwmDock-$0: *
+ I *FvwmDock-$0: Geometry $1
+ I *FvwmDock-$0: Font none
+ I *FvwmDock-$0: Colorset 9
+ I *FvwmDock-$0: Frame 0
+ I *FvwmDock-$0: Padding 0 0
+ I *FvwmDock-$0: (Id D$0, Icon $2)
+ I Module FvwmButtons FvwmDock-$0
+ I AddToFunc StartFunction I Module FvwmAuto 100 -menter 'EnterHandler $0 "$2" $3 $4 $5 $6 $7 $8 $9' 'LeaveHandler $0 $2'

DestroyFunc EnterHandler
AddToFunc EnterHandler
+ I ThisWindow (FvwmDock-$0) ThisWindow (!FvwmDock-*) Deschedule 35
+ I ThisWindow (FvwmDock-$0) WindowId $[last_winid] (FvwmDockA$0) Deschedule 35
+ I ThisWindow (FvwmDockA$0) Deschedule 45
+ I ThisWindow (FvwmDock-$0) SendToModule FvwmDock-$0 ChangeButton D$0 Icon "shadow.png"
+ I ThisWindow (FvwmDock-$0) CreateActiveButton $0 '$1' $2 $3 $4 $5 $6 $7 $8

# Delay ms should be longer than delay in FvwmAuto
DestroyFunc LeaveHandler
AddToFunc LeaveHandler
+ I ThisWindow SetEnv last_winid $[w.id]
+ I ThisWindow (FvwmDockA$0) Schedule 110 35 RestoreButton $0 $1
+ I ThisWindow (FvwmDock-$0) Schedule 110 45 RestoreButton $0 $1

DestroyFunc RestoreButton
AddToFunc RestoreButton
+ I SendToModule FvwmDock-$0 ChangeButton D$0 Icon $1
+ I KillModule FvwmButtons FvwmDockA$0

DestroyFunc CreateActiveButton
AddToFunc CreateActiveButton
+ I DestroyModuleConfig FvwmDockA$0: *
+ I *FvwmDockA$0: Pixmap none
+ I *FvwmDockA$0: BoxSize fixed
+ I *FvwmDockA$0: Frame 0
+ I *FvwmDockA$0: Font none
+ I *FvwmDockA$0: Padding 0 0
+ I *FvwmDockA$0: Rows 1
+ I *FvwmDockA$0: Columns 1
+ I ThisWindow PipeRead `echo *FvwmDockA$0: Geometry $8+$(($[w.x]$3))+$(($[w.y]$4))`
+ I *FvwmDockA$0: (Icon $2, Action(Mouse 1) '$5', Action(Mouse 2) '$6', Action(Mouse 3) '$7')
+ I Module FvwmButtons FvwmDockA$0

#####
# Module configurations
##################

# Animations are controlled by this module
# You could also use Frame, Lines, Turn, Twist, Random and None
DestroyModuleConfig FvwmAnimate: *
*FvwmAnimate: Effect frame
*FvwmAnimate: Iterations 200
*FvwmAnimate: Width 1
*FvwmAnimate: Delay 3
*FvwmAnimate: Color white

# FvwmProxy allows to see all windows
DestroyModuleConfig FvwmProxy: *
*FvwmProxy: Font "xft:snap; $[infostore.font_mono]"
*FvwmProxy: ProxyMove false

# FvwmIdent is an xwininfo replacement.
DestroyModuleConfig FvwmIdent: *
*FvwmIdent: Colorset 8
*FvwmIdent: Font "$[infostore.font_sans]"

# Default form settings
*FvwmFormDefault: Colorset 8
*FvwmFormDefault: ItemColorset 10
*FvwmFormDefault: Font "$[infostore.font_sans]"
*FvwmFormDefault: InputFont "$[infostore.font_mono]"
*FvwmFormDefault: ButtonFont "$[infostore.font_sans]"
*FvwmFormDefault: TimeoutFont "$[infostore.font_sans]"

# FvwmScroll swallows applications into smaller containers, sometimes handy.
DestroyModuleConfig FvwmScroll: *
*FvwmScroll: Back #f6f6f6
*FvwmScroll: Fore #f6f6f6

# FIXME: This will destroy all Windowstyle settings.
# FvwmEvent
DestroyModuleConfig FvwmEvent: *
*FvwmEvent: deiconify DeThumbnail
*FvwmEvent: add_window NewWindowFunc
*FvwmEvent: focus_change "TransparencyChangeFocus"
*FvwmEvent: new_desk "SendToModule FvwmDeskControl ChangeButton desk Title $$[desk.n]"

######
# Menus
#################
MenuStyle * PopupOffset 0 100, PopupDelay 300, TitleWarpOff
MenuStyle * TitleUnderlines2, SeparatorsLong, Animation, FlatSeparators
MenuStyle * BorderWidth 1
MenuStyle * TrianglesUseFore, TrianglesSolid
MenuStyle * VerticalTitleSpacing 0 0, VerticalItemSpacing 2 1
MenuStyle * PopupAsSubmenu, HoldSubmenus, SubmenusRight
MenuStyle * ItemFormat "%|%5.5i%1.3l%2.3>%|"
MenuStyle * VerticalItemSpacing 1 1, VerticalTitleSpacing 2 2
MenuStyle * MenuColorset 10, HilightBack, ActiveColorset 8
MenuStyle * "$[infostore.font_sans]"
MenuStyle * MenuFace DGradient 64 Red Black
MenuStyle * IconSize 24 24

# Window Operation Menu
DestroyMenu Window-Ops
AddToMenu Window-Ops "Window Operations"        Title
+ "Windows list...%xpms/mini.windows.xpm%"      WindowList                 (CurrentDesk, AcceptsFocus, !Iconic) Root c c \
  NoGeometry IconifiedAtEnd, MaxLabelWidth 60
+ ""                                            Nop
+ "Horizontal tile%mini.maximize-horiz1.xpm%"   FvwmRearrange -tile -v 0 100 97 0 -animate
+ "Vertical tile%mini.maximize-vert1.xpm%"      FvwmRearrange -tile -h 0 0 97 100 -animate
+ ""                                            Nop
+ "Resize%xpms/mini.resize3.xpm%"               Resize
+ "Top Half%xpms/mini.maximize-horiz1.xpm%"     TopHalfMix
+ "Bottom Half%xpms/mini.maximize-horiz1.xpm%"  BotHalfMix
+ "Left Half%xpms/mini.maximize-vert1.xpm%"     LeftHalfMix
+ "Right Half%xpms/mini.maximize-vert1.xpm%"    RightHalfMix
+ ""                                            Nop
+ "(Un) Stick%xpms/mini.stick2.xpm%"            Stick
+ "(Un) Thumbnail%xpms/mini.iconify1.xpm%"      Thumbnail
+ "(De) Iconify%xpms/mini.winXX-minimize.xpm%"  Iconify
+ "(Un) Maximize%xpms/mini.winXX-maximize.xpm%" Maximize-func
+ "(Un) Shade%xpms/mini.maximize1.xpm%"         WindowShade
+ ""                                            Nop
+ "Move%xpms/mini.move1.xpm%"                   Move
+ "Close%xpms/mini.winXX-close.xpm%"            Close
+ "Delete%xpms/mini.cross.xpm%"                 Delete
+ "Destroy%xpms/mini.cross.xpm%"                Destroy
+ ""                                            Nop
+ "Stays On Top%xpms/mini.raise3.xpm%"          Pick                       (CirculateHit) Layer 0 6
+ "Layer +1%xpms/mini.raise2.xpm%"              Pick                       (CirculateHit) Layer +1
+ "Stays Put%xpms/mini.winXX-normalize.xpm%"    Pick                       (CirculateHit) Layer 0 4
+ "Layer -1%xpms/mini.lower2.xpm%"              Pick                       (CirculateHit) Layer -1
+ "Stays On Bottom%xpms/mini.lower3.xpm%"       Pick                       (CirculateHit) Layer 0 2
+ ""                                            Nop
+ "%xpms/mini.window.xpm%Window Screenshot"     Pick                       (CirculateHit) FvwmWindowScreenshot
+ "%xpms/mini.desktop.xpm%Desktop Screenshot"   FvwmDesktopScreenshot      5
+ "Identify%xpms/mini.zoom.xpm%"                Module                     FvwmIdent
+ ""                                            Nop
+ "Modules%xpms/mini.modules.xpm%"              Popup                      MenuFvwmModules
+ "Send To...%xpms/mini.pager.xpm%"             Popup                      MenuPageList

# Wallpaper Browser by Taviso.
DestroyFunc WallpaperBrowser
AddToFunc   WallpaperBrowser
+ I PipeRead 'test ! -d "$0" && mkdir "$0"; \
    test ! -d "$0/.thumbs" && mkdir "$0/.thumbs"; \
    for i in "$0/"*; do \
        test -f "$0/.thumbs/${i##*/}" -a "${i}" -ot "$0/.thumbs/${i##*/}" || { \
                convert -quality 0 -sample 42 "${i}" "png:$0/.thumbs/${i##*/}" 2>/dev/null \
                    || continue; \
            }; \
    done; \
    fvwm-menu-directory --icon-title menu/folder-open.xpm --icon-file __PIXMAP__ --links \
    --icon-dir menu/folder.xpm \
    --dir "$0" --command-file="FuncNewWallpaper \\"%f\\"" \
    --exec-t="^xv -wait 2 *" --func-name WallpaperBrowser | sed \
    "s#__PIXMAP__\\(.*\\)\\\"\\(.*/\\)\\(.*\\)\\\"#\\2.thumbs/\\3\\1\\2\\3#g"'

# Creates a dynamic menu for all available Fvwm manpages
DestroyFunc FuncFvwmManpageMenu
AddToFunc FuncFvwmManpageMenu
+ I PipeRead 'fvwm-menu-directory \
              --dir "/usr/share/man/man1" \
              --title "Man Pages" --exec-file "^xterm -g 80x40 -n Fvwm-Help -T Fvwm-Help -e man" |\
              grep "^Destroy\\|^AddTo\\|^+ Dynamic\\|^+ Missing\\|^+ \\"[Ff]vwm*"|sed -e "s#\\.1\\.gz##g" \
              -e "s#/usr/share/man/man1/##g" -e "s#\\"##3" -e "s#\\"##3" '

# Activate lock screen if installed
DestroyFunc FuncLockScreen
AddToFunc   FuncLockScreen
+ I PipeRead 'if [ `pidof xscreensaver` ]; then \
                echo SetEnv isRunning 1; \
              else \
                echo SetEnv isRunning 0; \
              fi'
+ I Test (EnvMatch isRunning 1) Exec exec xscreensaver-command -lock
+ I TestRc (!Match) FuncShowMessage "Lock screen Info" "'xscreensaver' not running or not installed."

DestroyMenu MenuFvwmModules
AddToMenu MenuFvwmModules
+ "%xpms/mini.fvwm.xpm%FVWM Modules"            Popup                      "/Debian/FVWM_Modules"
+ "%xpms/mini.xterm.xpm%Quake-style Console"    Module                     StartHiddenConsole
+ ""                                            Nop
+ "%xpms/mini.exit.xpm%Stop modules"            Popup                      MenuFvwmStopModule

DestroyMenu MenuFvwmStopModule
AddToMenu MenuFvwmStopModule
+ "%xpms/mini.xterm.xpm%Stop Quake-style Console"   KillModule             StartHiddenConsole

DestroyMenu "/Debian/FVWM_Modules"
AddToMenu   "/Debian/FVWM_Modules" "FVWM Modules" Title Top
+ "&FvwmAnimate" Module FvwmAnimate
+ "Fvw&mAnimate menu"  Popup MenuFvwmAnimate
+ "Fvwm&Auto" Module FvwmAuto 300 raise lower
+ "Fvwm&Backer" Module FvwmBacker
+ "FvwmBa&nner" Module FvwmBanner
+ "FvwmB&uttons" Module FvwmButtons
+ "FvwmButtons (&Debian)" Module FvwmButtons DebianFvwmButtons
+ "Fvwm&CommandS" Module FvwmCommandS
+ "FvwmC&onsole" Module FvwmConsole
+ "FvwmCpp" Module FvwmCpp
+ "FvwmDebug" Module FvwmDebug
+ "FvwmDragWell" Module FvwmDragWell
+ "Fvwm&Event" Module FvwmEvent
+ "FvwmForm" Module FvwmForm
+ "Fvwm&Gtk" Module FvwmGtk
+ "Fvwm&IconBox" Module FvwmIconBox
+ "FvwmIconMan" Module FvwmIconMan
+ "FvwmIdent" Module FvwmIdent
+ "FvwmM&4" Module FvwmM4
+ "Fvwm&Pager" Module FvwmPager 0 0
+ "FvwmPro&xy" Module FvwmProxy
+ "Fvwm&Rearrange (cascade)" Module FvwmRearrange -cascade
+ "FvwmRearrange (&horiz)" Module FvwmRearrange -tile -h
+ "F&vwmRearrange (vert)" Module FvwmRearrange -tile
+ "Fvwm&Save" Module FvwmSave
+ "FvwmSaveDesk" Module FvwmSaveDesk
+ "FvwmScript" Module FvwmScript
+ "FvwmScroll" Module FvwmScroll
+ "Fvwm&Talk" Module FvwmTalk
+ "FvwmTas&kBar" Module FvwmTaskBar
+ "FvwmTheme" Module FvwmTheme
+ "FvwmTile" Module FvwmTile
+ "Fvwm&Wharf" Module FvwmWharf
+ "FvwmWindowMenu" Module FvwmWindowMenu
+ "FvwmWin&List" Module FvwmWinList

DestroyMenu MenuPageList
AddToMenu MenuPageList
+ "%workspaces/workspace-1.png%Desktop 1"   Pick MoveToPage 0 0
+ "%workspaces/workspace-2.png%Desktop 2"   Pick MoveToPage 1 0
+ "%workspaces/workspace-3.png%Desktop 3"   Pick MoveToPage 2 0
+ "%workspaces/workspace-4.png%Desktop 4"   Pick MoveToPage 0 1
+ "%workspaces/workspace-5.png%Desktop 5"   Pick MoveToPage 1 1
+ "%workspaces/workspace-6.png%Desktop 6"   Pick MoveToPage 2 1

######
# Window decorations
#################
#
# +----------------------------------------------------------+
# | X  X  X                                          X  X  X |
# +----------------------------------------------------------+
# | 1  3  5                                          6  4  2 |
# |                                                          |
#
# Vectors are basically just a set of co-ordinates, each button is a grid
# of 100x100 points (or you can use pixels..it's up to you), following
# each vector you must specify a line type:
#
#   @0 Shadow (sh)
#   @1 Hilight (hi)
#   @2 Background (bg)
#   @3 Foreground (fg)
#   @4 Invisible (just move the pointer, dont draw anything)

DestroyDecor DefaultDecor
AddToDecor   DefaultDecor
+ TitleStyle Centered Height 23
+ TitleStyle InActive ( Colorset 2 -- Flat )
+ TitleStyle Active ( Colorset 1 -- Flat )
+ AddTitleStyle Active ( TiledPixmap $[fvwm_images]/deco/title.png -- Flat )
+ AddTitleStyle Inactive ( TiledPixmap $[fvwm_images]/deco/title.png -- Flat )
+ ButtonStyle All InActive ( Colorset 10 -- Flat )
+ ButtonStyle All Active ( Colorset 4 -- Flat )
+ ButtonStyle  1 ActiveUp TiledPixmap $[fvwm_images]/deco/close-active.png -- Flat
+ ButtonStyle  1 ActiveDown TiledPixmap $[fvwm_images]/deco/close-pressed.png -- Flat
+ ButtonStyle  1 Inactive TiledPixmap $[fvwm_images]/deco/close-inactive.png -- Flat
+ ButtonStyle  2 ActiveUp TiledPixmap $[fvwm_images]/deco/max-active.png -- Flat
+ ButtonStyle  2 ActiveDown TiledPixmap $[fvwm_images]/deco/max-pressed.png -- Flat
+ ButtonStyle  2 Inactive TiledPixmap $[fvwm_images]/deco/max-inactive.png -- Flat
+ ButtonStyle  4 ActiveUp TiledPixmap $[fvwm_images]/deco/min-active.png -- Flat
+ ButtonStyle  4 ActiveDown TiledPixmap $[fvwm_images]/deco/min-pressed.png -- Flat
+ ButtonStyle  4 Inactive TiledPixmap $[fvwm_images]/deco/min-inactive.png -- Flat
+ ButtonStyle 3 ActiveUp Vector 2 30x60@3 60x60@3 60x50@3 30x50@3 30x60@3 \
  -- Flat UseTitleStyle
+ ButtonStyle 3 ActiveDown Vector 2 30x60@3 60x60@3 60x50@3 30x50@3 30x60@3 \
  -- Flat UseTitleStyle
+ ButtonStyle 3 Inactive Vector 2 30x60@3 60x60@3 60x50@3 30x50@3 30x60@3 \
  -- Flat UseTitleStyle
+ TitleStyle -- Flat
+ BorderStyle Simple -- NoInset Flat
+ ButtonStyle All -- UseTitleStyle

#####
# Re-define our own functions
##################
#
# The letter before the action tells what kind of action triggers the
# command which follows it.
#   I: Immediate
#   M: Motion (user moves the mouse)
#   C: Click
#   H: Hold
#   D: Double-click

DestroyFunc FvwmEval
AddToFunc   FvwmEval
+ I SendToModule FvwmPerl eval $*

#####
# Prints a message in .xsession-errors
##################
DestroyFunc FuncPrintDbgMsg
AddToFunc   FuncPrintDbgMsg
+ I PipeRead `echo "[fvwm]$0: $1" >> ${HOME}/.xsession-errors`

#####
# Check which appliction are installed to get full functionality
# print a message in .xsession-errors if check for app failed
##################
DestroyFunc FuncAppCheck
AddToFunc   FuncAppCheck
# xterm
+ I Test (!x xterm) FuncPrintDbgMsg "[AppCheck]" "xterm (view, edit) not installed"
# xclock
+ I Test (!x xclock) FuncPrintDbgMsg "[AppCheck]" "xclock (date & time) not installed"
# default terminal
+ I Test (!x $[infostore.fvwm_terminal]) FuncPrintDbgMsg "[AppCheck]" "default terminal $[infostore.fvwm_terminal] not installed"
# default browser
+ I Test (!x $[infostore.fvwm_browser]) FuncPrintDbgMsg "[AppCheck]" "default browser $[infostore.fvwm_browser] not installed"
# xscreensaver
+ I Test (!x xscreensaver-command) FuncPrintDbgMsg "[AppCheck]" "xscreensaver (lock) not installed"
# feh
+ I Test (!x feh) FuncPrintDbgMsg "[AppCheck]" "feh (for setting scaled background) not installed"
# import in package imagemagick
+ I Test (!x import) FuncPrintDbgMsg "[AppCheck]" "imagemagick (import for screenshot, thumbs) not installed"
# stalonetray
+ I Test (!x stalonetray) FuncPrintDbgMsg "[AppCheck]" "stalonetray (systray) not installed"
# systray app volumeicon
+ I Test (!x volumeicon) FuncPrintDbgMsg "[AppCheck]" "volumeicon (systray volume control) not installed"
# systray app fdpowermon
+ I Test (!x fdpowermon) FuncPrintDbgMsg "[AppCheck]" "fdpowermon (systray pm control) not installed"
# systray app nm-applet
+ I Test (!x nm-applet) FuncPrintDbgMsg "[AppCheck]" "nm-applet (systray network control) not installed"
# systray app bluetooth-applet
+ I Test (!x bluetooth-applet) FuncPrintDbgMsg "[AppCheck]" "bluetooth-applet (systray bluetooth-applet) not installed"
# Suspend, hibernate pm-is-supported
+ I Test (!x pm-is-supported) FuncPrintDbgMsg "[RequiredAppCheck]" "pm-utils (suspend, hibernate) not installed"
# wmcpu
+ I Test (!x wmcpu) FuncPrintDbgMsg "[RequiredAppCheck]" "wmcpu (CPU monitoring docked app) not installed"
# wmhdplop
+ I Test (!x wmhdplop) FuncPrintDbgMsg "[RequiredAppCheck]" "wmhdplop (Disks monitoring docked app) not installed"
# wmclock
+ I Test (!x wmclock) FuncPrintDbgMsg "[RequiredAppCheck]" "wmclock (Date monitoring docked app) not installed"
# conky
+ I Test (!x conky) FuncPrintDbgMsg "[RequiredAppCheck]" "conky (desklet) not installed"

######
# Start function
#################
AddToFunc StartFunction
+ I Test (Init) Exec exec fvwm-root --dither --retain-pixmap $[fvwm_wallpaper]
+ I Test (Init) FuncAppCheck
+ I PipeRead `mkdir -p $[fvwm_cache]`
+ I PipeRead `rm -rf $[fvwm_cache]/* 2>/dev/null`
+ I PipeRead `rm ${HOME}/.xsession-errors`
+ I FvwmButtons
+ I Module FvwmProxy
+ I Module FvwmCommandS
+ I Module FvwmAnimate
+ I Module FvwmEvent
+ I Module FvwmProxy
+ I Module FvwmButtons -g +0+0 FvwmDeskControl
+ I Module FvwmButtons -g -0-0 FvwmConky
+ I Wait FvwmConky
+ I Module FvwmButtons -g -0+0 FvwmShelf
+ I Module FvwmButtons -g +0-0 FvwmLowerLeft
+ I Module FvwmPerl
+ I FvwmEval use POSIX
+ I Test (Restart) All (Iconic) Test (f $[fvwm_cache]/icon.tmp.$[w.id].png) WindowStyle IconOverride, \
  Icon $[fvwm_cache]/icon.tmp.$[w.id].png
+ I Read modules/Menu
+ I GotoPage 0 0

######
# Init function
#################
DestroyFunc InitFunction
AddToFunc   InitFunction
+ I Exec exec xrdb ~/.Xresources
+ I Exec exec ~/.screenlayout/layout.sh
+ I Exec exec feh --bg-scale $[fvwm_wallpaper]
# xsettings daemon
+ I Test (x xsettingsd) Exec exec xsettingsd
# composite support
+ I Test (x compton) Exec exec compton -c -C -f -G -b --vsync opengl-swc -r 10
# Pulseaudio
+ I Test (x pulseaudio) Exec exec pulseaudio --check || pulseaudio -D
# Gnome settings daemon
+ I Test (x gnome-settings-daemon) Exec exec gnome-settings-daemon
+ I Exec exec /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 &
# Notification daemon
+ I Exec exec /usr/lib/notification-daemon/notification-daemon &
# Tray section
+ I Exec exec stalonetray
+ I PipeRead 'echo SetEnv systray_started `ps -e | grep -c stalonetray`'
# + I Test (EnvMatch systray_started 0 ) break
# Notification popups
+ I Exec exec bash -c 'if [ `getconf LONG_BIT` = "64" ]; then /usr/lib/x86_64-linux-gnu/notify-osd; else /usr/lib/i386-linux-gnu/notify-osd; fi'
# VNC icon
+ I Test (x vncconfig) Exec exec vncconfig -nowin
# Insync
+ I Test (x insync) Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then insync start; fi'
+ I Test (x insync-headless) Exec exec bash -c 'if [ $DISPLAY = ":99" ]; then insync-headless start; fi'
# Dropbox
+ I Test (x dropbox) Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then dropbox start; fi'
+ I Test (x dropbox) Exec exec bash -c 'if [ $DISPLAY = ":99" ]; then dropbox start; fi'
+ I Test (x dropbox) Exec exec bash -c 'if [ $DISPLAY = ":1" ]; then ~/.dropbox-dist/dropboxd; fi'
# Google Music Manager
+ I Test (x google-musicmanager) Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then google-musicmanager; fi'
+ I Test (x google-musicmanager) Exec exec bash -c 'if [ $DISPLAY = ":99" ]; then google-musicmanager; fi'
# HP systray
+ I Test (x hp-systray) Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then hp-systray; fi'
+ I Test (x hp-systray) Exec exec bash -c 'if [ $DISPLAY = ":99" ]; then hp-systray; fi'
# Skype
+ I Test (x skype) Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then skype; fi'
# Clipboard
+ I Test (x clipit) Exec exec clipit
+ I TestRc (!Match) Test (x parcellite) Exec exec parcellite
# Volume
+ I Test (x volumeicon) Exec exec volumeicon
# Network
+ I Test (x nm-applet) Exec exec nm-applet
# Bluetooth
+ I Test (x blueman-applet) Exec exec blueman-applet
# Power management
+ I Test (x xfce4-power-manager) Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then xfce4-power-manager; fi'
# Screensaver daemon for locking
+ I Test (x xscreensaver-command) Test (Init) Exec exec bash -c 'if [ $DISPLAY = ":0" ]; then xscreensaver -no-splash; fi'

######
# Thumbnailing functions
#################
DestroyFunc Thumbnail
AddToFunc Thumbnail
+ I Raise
+ I ThisWindow (!Iconic) SetEnv Icon-$[w.id] $[w.iconfile]
+ I ThisWindow (!Shaded, Iconifiable, !Iconic) PipeRead \
  "xwd -silent -id $[w.id] | convert -scale 128 -frame 1x1 \
    -mattecolor black -quality 0 xwd:- png:$[fvwm_cache]/icon.tmp.$[w.id].png \
    && echo WindowStyle IconOverride, Icon $[fvwm_cache]/icon.tmp.$[w.id].png \
    || echo Nop"
+ I TestRc (Match) Test (f $[w.miniiconfile], f $[fvwm_cache]/icon.tmp.$[w.id].png) PipeRead \
  "composite -geometry +2+4 $[w.miniiconfile] $[fvwm_cache]/icon.tmp.$[w.id].png \
    $[fvwm_cache]/icon.tmp.$[w.id].png; echo Nop"
+ I Iconify

DestroyFunc DeThumbnail
AddToFunc DeThumbnail
+ I PipeRead "echo Test \\(i \\$\\[Icon-$[w.id]\\]\\) WindowStyle Icon \\$\\[Icon-$[w.id]\\]"
+ I TestRc (NoMatch) WindowStyle NoIconOverride, Icon
+ I Exec rm -f $[fvwm_cache]/icon.tmp.$[w.id].png
+ I All (Iconic, CurrentPage) PlaceAgain icon
+ I UnsetEnv Icon-$[w.id]

DestroyFunc ReThumbnail
AddToFunc   ReThumbnail
+ I Iconify
+ I Thumbnail

######
# Expose function
#################
DestroyFunc FvwmExpose
AddToFunc FvwmExpose
+ I AddToMenu FvwmExposeMenu "Expose" Title
+ I DynamicPopDownAction DestroyMenu FvwmExposeMenu
+ I All (!Iconic !Shaded AcceptsFocus)\
  PipeRead "echo Raise; \
        xwd -silent -id $[w.id] | convert -scale $$(($[w.width]/10)) -quality 0 xwd:- \
        png:$[fvwm_cache]/tmp/icon.exp.$[w.id].png \
    && echo AddToMenu FvwmExposeMenu \
    %$[fvwm_cache]/tmp/icon.exp.$[w.id].png%\\\'\"$[w.name]\"\\\' WindowID $[w.id] WarpToWindow 50 50 \
        && echo AddToMenu FvwmExposeMenu \\\"\\\" Nop \
    || Nop"
+ I Popup FvwmExposeMenu
+ I Exec exec rm -f $[fvwm_cache]/tmp/icon.exp.*

######
# Transparecy function
#################
DestroyFunc TransparencyChangeFocus
AddToFunc TransparencyChangeFocus
+ I Next (!Focused) PipeRead "(echo -n nofocused; xwininfo -id $[w.id] | grep '^xwininfo') >> /tmp/log"
+ I Prev (Focused) PipeRead "(echo -n focused; xwininfo -id $[w.id] | grep '^xwininfo') >> /tmp/log"

######
# Screenshot functions (uses ImageMagick)
#################
DestroyFunc FvwmWindowScreenshot
AddToFunc   FvwmWindowScreenshot
+ I ThisWindow (!Shaded !Iconic Iconifiable) \
  Exec import -window $[w.id] -quality 100 -silent \
  "~/Pictures/Screenshots/screenshot-`date +%F[%R]`.$[w.id].jpg"
+ I Exec notify-send "Window screenshot was taken."

DestroyFunc FvwmDesktopScreenshot
AddToFunc   FvwmDesktopScreenshot
+ I Exec sleep $0; import -window root -quality 100 -silent \
                          "~/Pictures/Screenshots/screenshot-`date +%F[%R]`.jpg"
+ I Exec notify-send "Desktop screenshot was taken."

######
# Lock screen functions
#################
DestroyFunc FuncLockScreen
AddToFunc   FuncLockScreen
+ I PipeRead 'if [ `pidof xscreensaver` ]; then \
                echo SetEnv isRunning 1; \
              else \
                echo SetEnv isRunning 0; \
              fi'
+ I Test (EnvMatch isRunning 1) Exec exec xscreensaver-command -lock
+ I TestRc (!Match) FuncShowMessage "Lock screen Info" "'xscreensaver' not running or not installed."

######
# Tiling functions
#################
#
# From http://www.fvwmforums.org/phpBB3/viewtopic.php?t=3049
# window states 1-9 representing the positions as they would on a numpad
# i.e. 1 = lower-left corner; 9 = upper-right corner; 2 = bottom half of screen;
# 8 = top half of screen; 6 = right half of screen; 3 = bottom-right corner; etc.

DestroyFunc TileFunc
AddToFunc TileFunc
+ I Function ClearTileStatesFunc
+ I State $0 True
+ I ResizeMoveMaximize Frame $1 $2 $3 $4
+ I Current (State 10) Maximize True 100 -1p ewmhiwa

DestroyFunc ClearTileStatesFunc
AddToFunc ClearTileStatesFunc
+ I State 1 False
+ I State 2 False
+ I State 3 False
+ I State 4 False
+ I State 5 False
+ I State 6 False
+ I State 7 False
+ I State 8 False
+ I State 9 False

DestroyFunc UnTileFunc
AddToFunc UnTileFunc
+ I Maximize False
+ I Function ClearTileStatesFunc
+ I State 5 On

DestroyFunc TileLeftFunc
AddToFunc TileLeftFunc
# if not tiled, tile left
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 4 48wa 98wa 0 0
+ I AnimatedMove 5p 38p Warp
+ I Maximize True 50 100
+ I TestRc (Match) Break
# if tiled bottom-left, then tile left
+ I Current (State 1) Function TileFunc 4 48wa 98wa 0 0
+ I State 1 False
+ I TestRc (Match) Break
# if tiled bottom, then tile bottom-left
+ I Current (State 2) Function TileFunc 1 48wa 48wa 0 50
+ I State 2 False
+ I TestRc (Match) Break
# if tiled bottom-right, then tile bottom
+ I Current (State 3) Function TileFunc 2 98wa 48wa 0 50
+ I State 3 False
+ I TestRc (Match) Break
# if tiled left, reduce to quarter screen
+ I Current (State 4) Function TileFunc 4 48wa 98wa 0 0
+ I TestRc (Match) Break
# if tiled middle, tile left
+ I Current (State 5) Function TileFunc 4 48wa 98wa 0 0
+ I State 5 False
+ I TestRc (Match) Break
# if tiled right, then untile and remove tiled states
+ I Current (State 6) Function UnTileFunc
+ I TestRc (Match) Break
# if tiled top-left, then tile left
+ I Current (State 7) Function TileFunc 4 48wa 98wa 0 0
+ I State 7 False
+ I TestRc (Match) Break
# if tiled up, then tile top-left
+ I Current (State 8) Function TileFunc 7 48wa 48wa 0 0
+ I State 8 False
+ I TestRc (Match) Break
# if tiled top-right, then tile top
+ I Current (State 9) Function TileFunc 8 48wa 48wa 0 0
+ I State 9 False
+ I TestRc (Match) Break
# if tiled fullscreen, then untile
+ I Current (State 10) Function TileFunc 4 48wa 98wa 0 0
+ I State 10 False
+ I TestRc (Match) Break

DestroyFunc TileRightFunc
AddToFunc TileRightFunc
# if not tiled, tile right
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 6 48wa 98wa 50 0
+ I AnimatedMove 50 65p Warp
+ I Maximize True 50 100
+ I TestRc (Match) Break
# if tiled bottom-left, tile to bottom
+ I Current (State 1) Function TileFunc 2 98wa 48wa 0 50
+ I State 1 False
+ I TestRc (Match) Break
# if tiled bottom, then tile bottom-right
+ I Current (State 2) Function TileFunc 3 48wa 48wa 50 50
+ I State 2 False
+ I TestRc (Match) Break
# if tiled bottom-right, then tile to right
+ I Current (State 3) Function TileFunc 6 48wa 98wa 50 0
+ I State 3 False
+ I TestRc (Match) Break
# if tiled left, then untile
+ I Current (State 4) Function UnTileFunc
+ I TestRc (Match) Break
# if tiled middle, tile right
+ I Current (State 5) Function TileFunc 6 48wa 48wa 50 0
+ I State 5 False
+ I TestRc (Match) Break
# if tiled right, then reduce to quarter size
+ I Current (State 6) Function TileFunc 6 48wa 98wa 50 0
+ I TestRc (Match) Break
# if tiled top-left, then tile top
+ I Current (State 7) Function TileFunc 8 98wa 48wa 0 0C
+ I State 7 False
+ I TestRc (Match) Break
# if tiled up, then tile top-right
+ I Current (State 8) Function TileFunc 9 48wa 48wa 50 0
+ I State 8 False
+ I TestRc (Match) Break
# if tiled top-right, then tile right
+ I Current (State 9) Function TileFunc 6 48wa 98wa 50 0
+ I State 9 False
+ I TestRc (Match) Break
# if tiled fullscreen, then untile
+ I Current (State 10) Function TileFunc 6 48wa 48wa 50 0
+ I State 10 False
+ I TestRc (Match) Break

DestroyFunc TileUpFunc
AddToFunc TileUpFunc
# if not tiled, tile up
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 8 98wa 48wa 0 0
+ I TestRc (Match) Break
# if tiled bottom-left, tile to left
+ I Current (State 1) Function TileFunc 4 48wa 98wa 0 0
+ I State 1 False
+ I TestRc (Match) Break
# if tiled bottom, then untile
+ I Current (State 2) Function UnTileFunc
+ I TestRc (Match) Break
# if tiled bottom-right, then tile right
+ I Current (State 3) Function TileFunc 6 48wa 98wa 50 0
+ I State 3 False
+ I TestRc (Match) Break
# if tiled left, then tile top left
+ I Current (State 4) Function TileFunc 7 48wa 48wa 0 0
+ I State 4 False
+ I TestRc (Match) Break
# if tiled middle, tile up
+ I Current (State 5) Function TileFunc 8 98wa 48wa 0 0
+ I State 5 False
+ I TestRc (Match) Break
# if tiled right, then tile top right
+ I Current (State 6) Function TileFunc 9 48wa 48wa 50 0
+ I State 6 False
+ I TestRc (Match) Break
# if tiled top-left, then do nothing
+ I Current (State 7) Function TileFunc 8 98wa 48wa 0 0
+ I State 7 False
+ I TestRc (Match) Break
# if tiled up, then do maximize
+ I Current (State 8) TileFunc 10 98wa 98wa 0 0
+ I State 8 False
+ I TestRc (Match) Break
# if tiled top-right, then do nothing
+ I Current (State 9) TileFunc 8 98wa 48wa 0 0
+ I State 9 False
+ I TestRc (Match) Break
# if tiled fullscreen, then untile
+ I Current (State 10) UnTileFunc
+ I State 10 False
+ I TestRc (Match) Break

DestroyFunc TileDownFunc
AddToFunc TileDownFunc
# if not tiled, tile down
+ I Current (!State 1, !State 2, !State 3, !State 4, !State 5, !State 6, !State 7, !State 8, !State 9, !State 10) Function TileFunc 2 98wa 48wa 0 50
+ I TestRc (Match) Break
# if tiled bottom-left, then tile down
+ I Current (State 1) Function TileFunc 2 98wa 48wa 0 50
+ I State 1 False
+ I TestRc (Match) Break
# if tiled bottom, go fullscreen
+ I Current (State 2) TileFunc 10 98wa 98wa 0 0
+ I State 2 False
+ I TestRc (Match) Break
# if tiled bottom-right, then tile down
+ I Current (State 3) Function TileFunc 2 98wa 48wa 0 50
+ I State 3 False
+ I TestRc (Match) Break
# if tiled left, then tile bottom left
+ I Current (State 4) Function TileFunc 1 48wa 48wa 0 50
+ I State 4 False
+ I TestRc (Match) Break
# if tiled middle, tile down
+ I Current (State 5) Function TileFunc 2 98wa 48wa 0 50
+ I State 5 False
+ I TestRc (Match) Break
# if tiled right, then tile bottom right
+ I Current (State 6) Function TileFunc 3 48wa 48wa 50 50
+ I State 6 False
+ I TestRc (Match) Break
# if tiled top-left, then tile left
+ I Current (State 7) Function TileFunc 4 48wa 98wa 0 0
+ I State 7 False
+ I TestRc (Match) Break
# if tiled up, then untile
+ I Current (State 8) UnTileFunc
+ I State 8 False
+ I TestRc (Match) Break
# if tiled top-right, then tile right
+ I Current (State 9) Function TileFunc 6 48wa 98wa 50 0
+ I State 9 False
+ I TestRc (Match) Break
# if tiled fullscreen, then untile
+ I Current (State 10) UnTileFunc
+ I State 10 False
+ I TestRc (Match) Break

DestroyFunc TopHalfMix
AddToFunc   TopHalfMix
+ I TileUpFunc
+ I State 8 on

DestroyFunc LeftHalfMix
AddToFunc   LeftHalfMix
+ I TileLeftFunc
+ I State 4 on

DestroyFunc BotHalfMix
AddToFunc   BotHalfMix
+ I TileDownFunc
+ I State 2 on

DestroyFunc RightHalfMix
AddToFunc   RightHalfMix
+ I TileRightFunc
+ I State 6 on

######
# Window manipulation functions
#################

DestroyFunc FullScreen
AddToFunc   FullScreen
+ I Maximize True 100 -1p ewmhiwa
+ I State 10 on

DestroyFunc Maximize-func
AddToFunc Maximize-func
+ I SetEnv TEMP $[0]
+ I ThisWindow (!Maximized) Maximize True 100 -1p ewmhiwa, \
  WindowStyle FixedPosition, FixedSize, ResizeHintOverride, \
  State 10 on, State 5 False
+ I TestRc (NoMatch) ThisWindow (Maximized) UnMaximizeWithFS
+ I InfoStoreAdd x_$[w.id] $[w.x]
+ I InfoStoreAdd y_$[w.id] $[w.y]
+ I InfoStoreAdd width_$[w.id] $[w.width]
+ I InfoStoreAdd height_$[w.id] $[w.height]
+ I Test (EnvMatch TEMP animate) \
  SendToModule FvwmAnimate animate \
  $[w.x] $[w.y] $[w.width] $[w.height] \
  0 0 $[vp.width] $[vp.height]
+ I UnsetEnv TEMP

DestroyFunc MaximizeWithFS
AddToFunc   MaximizeWithFS
+ I WindowStyle !Borders, !Handles, BorderWidth 0, HandleWidth 0, !Title, ResizeHintOverride
+ I UpdateStyles
+ I State 10 on
+ I State 5 False
+ I Maximize $*

DestroyFunc UnMaximizeWithFS
AddToFunc   UnMaximizeWithFS
+ I Maximize false
+ I UnTileFunc
+ I State 10 False
+ I State 5 on
+ I DestroyWindowStyle
+ I UpdateStyles
+ I Raise
+ I UpdateStyles

DestroyFunc PickWindowRaiseAndDeiconify
AddToFunc PickWindowRaiseAndDeiconify
+ I Pick
+ I TestRc (Error) Break
+ I Raise
+ I Focus
+ I Iconify off

DestroyFunc Move-or-Raise
AddToFunc Move-or-Raise
+ I Raise
+ D Maximize-func
+ C Raise
+ C Focus
+ M Move

DestroyFunc Move-or-Iconify
AddToFunc Move-or-Iconify
+ I Raise
+ D Maximize-func
+ M Move
+ C Iconify

DestroyFunc Resize-or-Raise
AddToFunc Resize-or-Raise
+ I Raise
+ D Maximize-func
+ C Raise
+ C Focus
+ M Resize

######
# Window-moving functions
#################

DestroyFunc MoveRight
AddToFunc   MoveRight
+ I AnimatedMove w+20p keep

DestroyFunc MoveLeft
AddToFunc MoveLeft
+ I AnimatedMove w+-20p keep

DestroyFunc MoveUp
AddToFunc MoveUp
+ I AnimatedMove keep w+-20p

DestroyFunc MoveDown
AddToFunc MoveDown
+ I AnimatedMove keep w+20p

DestroyFunc ShrinkEast
AddToFunc ShrinkEast
+ I PipeRead "echo Resize $(($[cw.width] - 15))p keep"

DestroyFunc GrowEast
AddToFunc GrowEast
+ I PipeRead "echo Resize $(($[cw.width] + 15))p keep"

DestroyFunc ShrinkSouth
AddToFunc ShrinkSouth
+ I PipeRead "echo Resize keep $(($[cw.height] - 15))p"

DestroyFunc GrowSouth
AddToFunc GrowSouth
+ I PipeRead "echo Resize keep $(($[cw.height] + 15))p"

######
# Wheel scrolling function
#################
DestroyFunc WheelScroll
AddToFunc WheelScroll I PipeRead 'case $0 in \
      up) test $[page.ny] -eq $$(($[desk.pagesy]-1)) -a $[page.nx] -lt $$(($[desk.pagesx]-1)) \
         && echo GotoPage +1p 0 \
         || echo GotoPage 0p +1p;; \
      down) test $[page.ny] -eq 0 -a $[page.nx] -gt 0 \
         && echo GotoPage -1p $$(($[desk.pagesy]-1)) \
         || echo GotoPage 0p -1p;; \
   esac'

######
# Show desktop function
#################
DestroyFunc ShowDesktop
AddToFunc ShowDesktop
+  I All (AcceptsFocus CurrentPage !Iconic !Shaded !ButtonDocks) Iconify

######
# Custom functions
#################

######
# Autohide console example: http://dev.gentoo.org/~taviso/autohide_console.png
#################
AddToFunc Autohide
+ I ThisWindow ($0) Deschedule $[w.id]
+ I TestRc (!Match) Deschedule -$[w.id]
+ I ThisWindow ($0) ThisWindow (shaded) AutohideShow $1 $3
+ I TestRc (!Match) All ($0, !shaded) AutohideHide $2 $3

AddToFunc AutohideShow
+ I Schedule $0 -$[w.id] WindowShade $1 off
+ I Schedule $0 -$[w.id] Raise
+ I Schedule $0 -$[w.id] Deschedule $[w.id]
+ I Schedule $0 -$[w.id] Deschedule -$[w.id]

AddToFunc AutohideHide
+ I Schedule $0 $[w.id] WindowShade $1 on
+ I Schedule $0 $[w.id] Deschedule $[w.id]
+ I Schedule $0 $[w.id] Deschedule -$[w.id]

DestroyFunc StartHiddenConsole
AddToFunc StartHiddenConsole
+ I Exec exec rxvt +sb -geometry 144x8+2+0 -name HiddenConsole
+ I Wait HiddenConsole
+ I Autohide HiddenConsole 250 0 N

DestroyFunc FuncAutoEnter
AddToFunc FuncAutoEnter I Autohide HiddenConsole 250 500 N

######
# Custom Window manipulation functions
#################

# Used by the WindowList command. Replaces the builtin function.
DestroyFunc WindowListFunc
AddToFunc WindowListFunc
+ I ThisWindow (Iconic) DeIconifyWindow
+ I ThisWindow FlipFocus NoWarp
+ I ThisWindow Raise
+ I ThisWindow (FvwmButtons) WarpToWindow 30 30

# Makes a window "dance"
DestroyFunc Jiggle
AddToFunc Jiggle
+ I PipeRead "for ((y=$0;y>=0;y--)) do \
    printf 'AnimatedMove w+%up w+%up\\nAnimatedMove w-%up w-%up\\n' \
    ${y} ${y} ${y} ${y}; done"

# Used when new window pops up (for special events)
DestroyFunc NewWindowFunc
AddToFunc NewWindowFunc
+ I ThisWindow (xmessage) Jiggle 5

######
# Mouse bindings
#################
#
# Mouse 0 is special to fvwm, meaning "any" mouse button
# Recall that mouse formats look like this:
# +------------+
# | ||  ||  || |
# |            |
# +------------+
#   1   2   3
#
#
# Contexts:                                  Desktop
#     R = Root Window                 rrrrrrrrrrrrrrrrrrrrrr
#     W = Application Window          rIrrrrFSSSSSSSSSFrrrrr
#     F = Frame Corners               rrrrrrS13TTTT642Srrrrr
#     S = Frame Sides                 rIrrrrSwwwwwwwwwSrrrrr
#     T = Title Bar                   rrrrrrSwwwwwwwwwSrrrrr
#     I = Icon                        rIrrrrFSSSSSSSSSFrrrrr
#                                     rrrrrrrrrrrrrrrrrrrrrr
# Numbers are buttons: 1 3 5 7 9   0 8 6 4 2
#
# Modifiers: (A)ny, (C)ontrol, (S)hift, (M)eta, (N)othing
#
# Buttons:
# +----------------------------------------------------------+
# | X  X  X  X  X                              X  X  X  X  X |
# +----------------------------------------------------------+
# | 1  3  5  7  9                              0  8  6  4  2 |
# |                                                          |

# Windows close,max,mini buttons
#     Button Context   Modifi  Function
Mouse 0      4          A      Iconify
Mouse 0      2          A      Maximize-func
Mouse 0      1          A      Close
Mouse 0      3          A      Menu Window-Ops Nop
Mouse 1      4          A      Iconify
Mouse 1      2          A      Maximize-func
Mouse 1      1          A      Close
Mouse 1      3          A      Menu Window-Ops Nop

# Main pop-up menus
#     Button Context   Modifi  Function
Mouse 3      R          N      Menu MenuFvwmRoot Nop
Mouse 3      R          A      Menu MenuFvwmRoot Nop
Mouse 2      R          N      WindowList

# When you click the edge of a window
#     Button Context   Modifi  Function
Mouse 1      F          A      Resize-or-Raise
Mouse 1      T          A      Move-or-Raise
Mouse 1      I          A      Move-or-Iconify
Mouse 2      T          A      WindowList
Mouse 3      T          A      Menu Window-Ops Nop

# Roll mouse wheel anywhere with Shift-Ctrl + cursor left/right for goto page
Mouse 4      A         SC      GotoPage +1p +0p
Mouse 5      A         SC      GotoPage -1p +0p

# Roll mouse wheel anywhere with Shift-Meta + cursor left/right for goto page
# with active window
Mouse 4      A         SM      MoveAndGotoPage +1p +0p
Mouse 5      A         SM      MoveAndGotoPage -1p +0p

######
# Key bindings
#################
#
# Keyname Context Modifi  Function
# Keyname is a standard X11 key name as defined in /usr/include/X11/keysymdef.h,
# (without the XK_ prefix), or the keysym database /usr/X11R6/lib/X11/XKeysymDB
# A=anywhere, C/M/S=control/meta/shift
# Modifier 4 is the left "Windows" key

######
# Ignore L (caps-lock) 2 (Numlock) and 5 (scroll lock) keys as modifiers
# pretty much mandatory for key bindings to work properly, especially laptops
#################
IgnoreModifiers L25

######
# Window-list bindings
#################

# Alt + Tab: Switch focus to the next non-iconic window
Key Tab A M WindowList (CurrentDesk, AcceptsFocus, !Iconic) Root c c \
    NoCurrentDeskTitle, NoGeometry, CurrentAtEnd, \
    IconifiedAtEnd, MaxLabelWidth 60, SelectOnRelease Meta_L

# Shift + Alt + Tab: Switch focus to the previous non-iconic window
Key Tab A SM WindowList (CurrentDesk, AcceptsFocus, !Iconic) Root c c \
    NoCurrentDeskTitle, NoGeometry, CurrentAtEnd, ReverseOrder, \
    IconifiedAtEnd, MaxLabelWidth 60, SelectOnRelease Meta_L

# Super + Tab: Switch focus and deiconify the next iconic window
Key Tab A 4 WindowList (CurrentDesk, Iconic) Root c c \
    NoCurrentDeskTitle, NoGeometry, ReverseOrder, MaxLabelWidth 60, \
    SelectOnRelease Super_L

# Shift + Super_L + Tab:  Switch focus and deiconify the next iconic window
Key Tab A S4 WindowList (CurrentDesk, Iconic) Root c c \
    NoCurrentDeskTitle, NoGeometry, MaxLabelWidth 60, \
    SelectOnRelease Super_L

######
# Key bindings using Alt + Fn
#################
#   Keyname Context  Modifi Function
Key F1       A       M      Menu MenuFvwmRoot Nop
Key F2       A       M      Menu Window-Ops   Nop
Key F3       A       M      WindowList
Key F4       A       M      SendToModule FvwmProxy ShowToggle
Key F5       A       M      Move
Key F6       A       M      FvwmExpose
Key F10      A       M      Maximize-func


######
# Key Bindings: ctrl-arrow tile windows, alt-arrow moves windows
#################
#   Keyname Context  Modifi Function
Key Left        A       C      ThisWindow (!Iconic, !Shaded) TileLeftFunc
Key Right       A       C      ThisWindow (!Iconic, !Shaded) TileRightFunc
Key Up          A       C      ThisWindow (!Iconic, !Shaded) TileUpFunc
Key Down        A       C      ThisWindow (!Iconic, !Shaded) TileDownFunc
Key Left        A       M      ThisWindow (!Iconic, !Shaded) MoveLeft
Key Right       A       M      ThisWindow (!Iconic, !Shaded) MoveRight
Key Up          A       M      ThisWindow (!Iconic, !Shaded) MoveUp
Key Down        A       M      ThisWindow (!Iconic, !Shaded) MoveDown

# Just push control and then the keypad numbers to make it work, makes things efficient
Key KP_Down W   C   ThisWindow (!Iconic, !Shaded) TileDownFunc
Key KP_Left W   C   ThisWindow (!Iconic, !Shaded) TileLeftFunc

Key KP_Begin    W   C   ThisWindow (!Iconic, !Shaded) Maximize-func

Key KP_Right    W   C   ThisWindow (!Iconic, !Shaded) TileRightFunc
Key KP_Up   W   C   ThisWindow (!Iconic, !Shaded) TileUpFunc

######
# Switch pages via keypad (no modifier)
#################
#   Keyname  Context Modifi Function
Key KP_Home  A       N      GotoPageFocus 0 0
Key KP_Up    A       N      GotoPageFocus 1 0
Key KP_Prior A       N      GotoPageFocus 2 0
Key KP_Left  A       N      GotoPageFocus 0 1
Key KP_Begin A       N      GotoPageFocus 1 1
Key KP_Right A       N      GotoPageFocus 2 1
Key KP_End   A       N      GotoPageFocus 0 2
Key KP_Down  A       N      GotoPageFocus 1 2
Key KP_Next  A       N      GotoPageFocus 2 2

######
# Move windows to strategic points on the current page via shift-keypad
#################
#   Keyname  Context Modifi Function
Key KP_Home  A       S      Move     0                   0
Key KP_End   A       S      Move     0                  -0
Key KP_Prior A       S      Move    -0                   0
Key KP_Next  A       S      Move    -0                  -0
Key KP_Up    A       S      MoveUp
Key KP_Down  A       S      MoveDown
Key KP_Left  A       S      MoveLeft
Key KP_Right A       S      MoveRight
Key KP_Begin A       S      PipeRead 'fvwm_center_window $[vp.width] $[vp.height] $[w.width] $[w.height]'

######
# Move a window to a different page via alt-keypad
#################
#   Keyname  Context Modifi Function
Key KP_Home  A       M      MoveToPage 0 0
Key KP_Up    A       M      MoveToPage 1 0
Key KP_Prior A       M      MoveToPage 2 0
Key KP_Left  A       M      MoveToPage 0 1
Key KP_Begin A       M      MoveToPage 1 1
Key KP_Right A       M      MoveToPage 2 1
Key KP_End   A       M      MoveToPage 0 2
Key KP_Down  A       M      MoveToPage 1 2
Key KP_Next  A       M      MoveToPage 2 2

######
# Move a window and follow it via ctrl-keypad
#################
#   Keyname  Context Modifi Function
Key KP_Home  A       C      MoveAndGotoPage 0 0
Key KP_Up    A       C      MoveAndGotoPage 1 0
Key KP_Prior A       C      MoveAndGotoPage 2 0
Key KP_Left  A       C      MoveAndGotoPage 0 1
Key KP_Begin A       C      MoveAndGotoPage 1 1
Key KP_Right A       C      MoveAndGotoPage 2 1
Key KP_End   A       C      MoveAndGotoPage 0 2
Key KP_Down  A       C      MoveAndGotoPage 1 2
Key KP_Next  A       C      MoveAndGotoPage 2 2

######
# Display keys
#################
DestroyFunc ChangeDisplaySetup
AddToFunc ChangeDisplaySetup
 + I PipeRead $[fvwm_userdir]/scripts/xrandr-auto.sh

Key XF86Display A N ChangeDisplaySetup

######
# Pulseaudio keys
#################
Key XF86AudioRaiseVolume   A N   Exec notify-send " " -i notification-audio-volume-medium -h int:value:$(pactl set-sink-volume 0 +10% | grep -m 1 "%]" | cut -d "[" -f2|cut -d "%" -f1) -h string:synchronous:volume
Key XF86AudioLowerVolume   A N   Exec notify-send " " -i notification-audio-volume-medium -h int:value:$(pactl set-sink-volume 0 -10% | grep -m 1 "%]" | cut -d "[" -f2|cut -d "%" -f1) -h string:synchronous:volume
Key XF86AudioMute          A N   Exec pactl set-sink-mute 0 toggle
Key XF86KbdBrightnessUp    A N   Exec xbacklight -inc 10
Key XF86KbdBrightnessDown  A N   Exec xbacklight -dec 10

######
# Mouse gestures
#################
#
# Syntax reminder:
#
#   1   2   3
#
#   4   5   6
#
#   7   8   9
#
# Stroke Sequence Button Context Modifiers Function
#
# I use mouse gestures in Opera and Mozilla, so I've duplicated some common ones here.
# To try these out, hold down the Left mouse button and trace the pattern on the Root
# Window, the sequence is a pattern on the grid above, so 14789 would be down then Right.
# First, define a StrokeFunc.
#
# Without this, you would have to execute all of your gestures entirely on the Root
# Window, This lets you change the Context and have a few other Neat Features, such as
# DrawMotion, which will draw a line as you make your Gesture (Neat!).
# There is also EchoSequence, Feedback and NotStayPressed.
#
# Note: EchoSequence prints sequences to STDERR.
#################
Mouse 1 R A     StrokeFunc DrawMotion FeedBack StrokeWidth 1

# Down, Then Up.
Stroke 25852 0 R N  Refresh

# Directions...
Stroke 456 0 R N    GotoPage +1p 0p
Stroke 654 0 R N    GotoPage -1p 0p
Stroke 852 0 R N    GotoPage 0p -1p
Stroke 258 0 R N    GotoPage 0p +1p

# Diagonal...
Stroke 159 0 R N    GotoPage +1p +1p
Stroke 951 0 R N    GotoPage -1p -1p
Stroke 357 0 R N    GotoPage -1p +1p
Stroke 753 0 R N    GotoPage +1p -1p

#####
# Quit
#
# Down, Then Right.
#
# Dont worry about running this gesture by accident,
# you will be asked to confirm
#################
Stroke 14789 0 R N  Module FvwmForm FvwmForm-QuitVerify

####
# Up, Then Down: Close a window.
#
# Note that you can also enter the sequence as it appears on your
# Numeric Keypad, by preceding the sequence with an `N`.
#
# The FVWM developers think of everything :)
#################
Stroke N25852 0 R N Pick Close

# Start a Web Browser
Stroke N1478963 0 R N Exec exec firefox

# Make a new Sticky Note
Stroke N1598753 0 R N Exec exec xpad

# The following settings are interpreted by EMACS, do not remove them.
# Local Variables:
# mode: shell-script
# fill-column: 80
# coding: utf-8
# End:
